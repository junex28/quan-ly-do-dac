#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5448
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GIS.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="QLDDBD")]
	public partial class DDBDDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBaoCaoCongTrinh(BaoCaoCongTrinh instance);
    partial void UpdateBaoCaoCongTrinh(BaoCaoCongTrinh instance);
    partial void DeleteBaoCaoCongTrinh(BaoCaoCongTrinh instance);
    partial void InsertThongTinChung(ThongTinChung instance);
    partial void UpdateThongTinChung(ThongTinChung instance);
    partial void DeleteThongTinChung(ThongTinChung instance);
    partial void InsertBaoCaoHoatDong(BaoCaoHoatDong instance);
    partial void UpdateBaoCaoHoatDong(BaoCaoHoatDong instance);
    partial void DeleteBaoCaoHoatDong(BaoCaoHoatDong instance);
    partial void InsertCongDoanThucHien(CongDoanThucHien instance);
    partial void UpdateCongDoanThucHien(CongDoanThucHien instance);
    partial void DeleteCongDoanThucHien(CongDoanThucHien instance);
    partial void InsertCongTrinh(CongTrinh instance);
    partial void UpdateCongTrinh(CongTrinh instance);
    partial void DeleteCongTrinh(CongTrinh instance);
    partial void InsertDangKyHoatDong(DangKyHoatDong instance);
    partial void UpdateDangKyHoatDong(DangKyHoatDong instance);
    partial void DeleteDangKyHoatDong(DangKyHoatDong instance);
    partial void InsertHoatDong(HoatDong instance);
    partial void UpdateHoatDong(HoatDong instance);
    partial void DeleteHoatDong(HoatDong instance);
    partial void InsertHoSoGiayPhep(HoSoGiayPhep instance);
    partial void UpdateHoSoGiayPhep(HoSoGiayPhep instance);
    partial void DeleteHoSoGiayPhep(HoSoGiayPhep instance);
    partial void InsertLoaiHinhToChuc(LoaiHinhToChuc instance);
    partial void UpdateLoaiHinhToChuc(LoaiHinhToChuc instance);
    partial void DeleteLoaiHinhToChuc(LoaiHinhToChuc instance);
    partial void InsertLoaiQuyen(LoaiQuyen instance);
    partial void UpdateLoaiQuyen(LoaiQuyen instance);
    partial void DeleteLoaiQuyen(LoaiQuyen instance);
    partial void InsertLoaiSanPham(LoaiSanPham instance);
    partial void UpdateLoaiSanPham(LoaiSanPham instance);
    partial void DeleteLoaiSanPham(LoaiSanPham instance);
    partial void InsertNangLucKeKhai(NangLucKeKhai instance);
    partial void UpdateNangLucKeKhai(NangLucKeKhai instance);
    partial void DeleteNangLucKeKhai(NangLucKeKhai instance);
    partial void InsertNhanLuc(NhanLuc instance);
    partial void UpdateNhanLuc(NhanLuc instance);
    partial void DeleteNhanLuc(NhanLuc instance);
    partial void InsertNhomNguoiDung(NhomNguoiDung instance);
    partial void UpdateNhomNguoiDung(NhomNguoiDung instance);
    partial void DeleteNhomNguoiDung(NhomNguoiDung instance);
    partial void InsertQuanHuyen(QuanHuyen instance);
    partial void UpdateQuanHuyen(QuanHuyen instance);
    partial void DeleteQuanHuyen(QuanHuyen instance);
    partial void InsertQuyen(Quyen instance);
    partial void UpdateQuyen(Quyen instance);
    partial void DeleteQuyen(Quyen instance);
    partial void InsertQuyenCuaNhom(QuyenCuaNhom instance);
    partial void UpdateQuyenCuaNhom(QuyenCuaNhom instance);
    partial void DeleteQuyenCuaNhom(QuyenCuaNhom instance);
    partial void InsertSanPham(SanPham instance);
    partial void UpdateSanPham(SanPham instance);
    partial void DeleteSanPham(SanPham instance);
    partial void InsertTaiKhoan(TaiKhoan instance);
    partial void UpdateTaiKhoan(TaiKhoan instance);
    partial void DeleteTaiKhoan(TaiKhoan instance);
    partial void InsertTinhThanh(TinhThanh instance);
    partial void UpdateTinhThanh(TinhThanh instance);
    partial void DeleteTinhThanh(TinhThanh instance);
    partial void InsertTinhTrangGiayPhep(TinhTrangGiayPhep instance);
    partial void UpdateTinhTrangGiayPhep(TinhTrangGiayPhep instance);
    partial void DeleteTinhTrangGiayPhep(TinhTrangGiayPhep instance);
    partial void InsertTinhTrangTaiKhoan(TinhTrangTaiKhoan instance);
    partial void UpdateTinhTrangTaiKhoan(TinhTrangTaiKhoan instance);
    partial void DeleteTinhTrangTaiKhoan(TinhTrangTaiKhoan instance);
    partial void InsertToChuc(ToChuc instance);
    partial void UpdateToChuc(ToChuc instance);
    partial void DeleteToChuc(ToChuc instance);
    partial void InsertThamDinh(ThamDinh instance);
    partial void UpdateThamDinh(ThamDinh instance);
    partial void DeleteThamDinh(ThamDinh instance);
    partial void InsertThietBi(ThietBi instance);
    partial void UpdateThietBi(ThietBi instance);
    partial void DeleteThietBi(ThietBi instance);
    #endregion
		
		public DDBDDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["QLDDBDConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DDBDDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DDBDDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DDBDDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DDBDDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BaoCaoCongTrinh> BaoCaoCongTrinhs
		{
			get
			{
				return this.GetTable<BaoCaoCongTrinh>();
			}
		}
		
		public System.Data.Linq.Table<ThongTinChung> ThongTinChungs
		{
			get
			{
				return this.GetTable<ThongTinChung>();
			}
		}
		
		public System.Data.Linq.Table<BaoCaoHoatDong> BaoCaoHoatDongs
		{
			get
			{
				return this.GetTable<BaoCaoHoatDong>();
			}
		}
		
		public System.Data.Linq.Table<CongDoanThucHien> CongDoanThucHiens
		{
			get
			{
				return this.GetTable<CongDoanThucHien>();
			}
		}
		
		public System.Data.Linq.Table<CongTrinh> CongTrinhs
		{
			get
			{
				return this.GetTable<CongTrinh>();
			}
		}
		
		public System.Data.Linq.Table<DangKyHoatDong> DangKyHoatDongs
		{
			get
			{
				return this.GetTable<DangKyHoatDong>();
			}
		}
		
		public System.Data.Linq.Table<HoatDong> HoatDongs
		{
			get
			{
				return this.GetTable<HoatDong>();
			}
		}
		
		public System.Data.Linq.Table<HoatDongDuocCap> HoatDongDuocCaps
		{
			get
			{
				return this.GetTable<HoatDongDuocCap>();
			}
		}
		
		public System.Data.Linq.Table<HoSoGiayPhep> HoSoGiayPheps
		{
			get
			{
				return this.GetTable<HoSoGiayPhep>();
			}
		}
		
		public System.Data.Linq.Table<LoaiHinhToChuc> LoaiHinhToChucs
		{
			get
			{
				return this.GetTable<LoaiHinhToChuc>();
			}
		}
		
		public System.Data.Linq.Table<LoaiQuyen> LoaiQuyens
		{
			get
			{
				return this.GetTable<LoaiQuyen>();
			}
		}
		
		public System.Data.Linq.Table<LoaiSanPham> LoaiSanPhams
		{
			get
			{
				return this.GetTable<LoaiSanPham>();
			}
		}
		
		public System.Data.Linq.Table<NangLucKeKhai> NangLucKeKhais
		{
			get
			{
				return this.GetTable<NangLucKeKhai>();
			}
		}
		
		public System.Data.Linq.Table<NhanLuc> NhanLucs
		{
			get
			{
				return this.GetTable<NhanLuc>();
			}
		}
		
		public System.Data.Linq.Table<NhomNguoiDung> NhomNguoiDungs
		{
			get
			{
				return this.GetTable<NhomNguoiDung>();
			}
		}
		
		public System.Data.Linq.Table<QuanHuyen> QuanHuyens
		{
			get
			{
				return this.GetTable<QuanHuyen>();
			}
		}
		
		public System.Data.Linq.Table<Quyen> Quyens
		{
			get
			{
				return this.GetTable<Quyen>();
			}
		}
		
		public System.Data.Linq.Table<QuyenCuaNhom> QuyenCuaNhoms
		{
			get
			{
				return this.GetTable<QuyenCuaNhom>();
			}
		}
		
		public System.Data.Linq.Table<SanPham> SanPhams
		{
			get
			{
				return this.GetTable<SanPham>();
			}
		}
		
		public System.Data.Linq.Table<TaiKhoan> TaiKhoans
		{
			get
			{
				return this.GetTable<TaiKhoan>();
			}
		}
		
		public System.Data.Linq.Table<TinhThanh> TinhThanhs
		{
			get
			{
				return this.GetTable<TinhThanh>();
			}
		}
		
		public System.Data.Linq.Table<TinhTrangGiayPhep> TinhTrangGiayPheps
		{
			get
			{
				return this.GetTable<TinhTrangGiayPhep>();
			}
		}
		
		public System.Data.Linq.Table<TinhTrangTaiKhoan> TinhTrangTaiKhoans
		{
			get
			{
				return this.GetTable<TinhTrangTaiKhoan>();
			}
		}
		
		public System.Data.Linq.Table<ToChuc> ToChucs
		{
			get
			{
				return this.GetTable<ToChuc>();
			}
		}
		
		public System.Data.Linq.Table<ThamDinh> ThamDinhs
		{
			get
			{
				return this.GetTable<ThamDinh>();
			}
		}
		
		public System.Data.Linq.Table<ThietBi> ThietBis
		{
			get
			{
				return this.GetTable<ThietBi>();
			}
		}
	}
	
	[Table(Name="dbo.BaoCaoCongTrinh")]
	public partial class BaoCaoCongTrinh : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaCongTrinh;
		
		private string _TenCongTrinh;
		
		private string _ChuDauTu;
		
		private string _CongDoanDaThiCong;
		
		private string _GiaTriDaThucHien;
		
		private string _ThoiGianThucHien;
		
		private string _GhiChu;
		
		private System.Nullable<int> _MaBaoCao;
		
		private EntityRef<BaoCaoHoatDong> _BaoCaoHoatDong;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaCongTrinhChanging(int value);
    partial void OnMaCongTrinhChanged();
    partial void OnTenCongTrinhChanging(string value);
    partial void OnTenCongTrinhChanged();
    partial void OnChuDauTuChanging(string value);
    partial void OnChuDauTuChanged();
    partial void OnCongDoanDaThiCongChanging(string value);
    partial void OnCongDoanDaThiCongChanged();
    partial void OnGiaTriDaThucHienChanging(string value);
    partial void OnGiaTriDaThucHienChanged();
    partial void OnThoiGianThucHienChanging(string value);
    partial void OnThoiGianThucHienChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    partial void OnMaBaoCaoChanging(System.Nullable<int> value);
    partial void OnMaBaoCaoChanged();
    #endregion
		
		public BaoCaoCongTrinh()
		{
			this._BaoCaoHoatDong = default(EntityRef<BaoCaoHoatDong>);
			OnCreated();
		}
		
		[Column(Storage="_MaCongTrinh", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaCongTrinh
		{
			get
			{
				return this._MaCongTrinh;
			}
			set
			{
				if ((this._MaCongTrinh != value))
				{
					this.OnMaCongTrinhChanging(value);
					this.SendPropertyChanging();
					this._MaCongTrinh = value;
					this.SendPropertyChanged("MaCongTrinh");
					this.OnMaCongTrinhChanged();
				}
			}
		}
		
		[Column(Storage="_TenCongTrinh", DbType="NVarChar(200)")]
		public string TenCongTrinh
		{
			get
			{
				return this._TenCongTrinh;
			}
			set
			{
				if ((this._TenCongTrinh != value))
				{
					this.OnTenCongTrinhChanging(value);
					this.SendPropertyChanging();
					this._TenCongTrinh = value;
					this.SendPropertyChanged("TenCongTrinh");
					this.OnTenCongTrinhChanged();
				}
			}
		}
		
		[Column(Storage="_ChuDauTu", DbType="NVarChar(200)")]
		public string ChuDauTu
		{
			get
			{
				return this._ChuDauTu;
			}
			set
			{
				if ((this._ChuDauTu != value))
				{
					this.OnChuDauTuChanging(value);
					this.SendPropertyChanging();
					this._ChuDauTu = value;
					this.SendPropertyChanged("ChuDauTu");
					this.OnChuDauTuChanged();
				}
			}
		}
		
		[Column(Storage="_CongDoanDaThiCong", DbType="NVarChar(2000)")]
		public string CongDoanDaThiCong
		{
			get
			{
				return this._CongDoanDaThiCong;
			}
			set
			{
				if ((this._CongDoanDaThiCong != value))
				{
					this.OnCongDoanDaThiCongChanging(value);
					this.SendPropertyChanging();
					this._CongDoanDaThiCong = value;
					this.SendPropertyChanged("CongDoanDaThiCong");
					this.OnCongDoanDaThiCongChanged();
				}
			}
		}
		
		[Column(Storage="_GiaTriDaThucHien", DbType="NVarChar(2000)")]
		public string GiaTriDaThucHien
		{
			get
			{
				return this._GiaTriDaThucHien;
			}
			set
			{
				if ((this._GiaTriDaThucHien != value))
				{
					this.OnGiaTriDaThucHienChanging(value);
					this.SendPropertyChanging();
					this._GiaTriDaThucHien = value;
					this.SendPropertyChanged("GiaTriDaThucHien");
					this.OnGiaTriDaThucHienChanged();
				}
			}
		}
		
		[Column(Storage="_ThoiGianThucHien", DbType="NVarChar(500)")]
		public string ThoiGianThucHien
		{
			get
			{
				return this._ThoiGianThucHien;
			}
			set
			{
				if ((this._ThoiGianThucHien != value))
				{
					this.OnThoiGianThucHienChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianThucHien = value;
					this.SendPropertyChanged("ThoiGianThucHien");
					this.OnThoiGianThucHienChanged();
				}
			}
		}
		
		[Column(Storage="_GhiChu", DbType="NVarChar(2000)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[Column(Storage="_MaBaoCao", DbType="Int")]
		public System.Nullable<int> MaBaoCao
		{
			get
			{
				return this._MaBaoCao;
			}
			set
			{
				if ((this._MaBaoCao != value))
				{
					if (this._BaoCaoHoatDong.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaBaoCaoChanging(value);
					this.SendPropertyChanging();
					this._MaBaoCao = value;
					this.SendPropertyChanged("MaBaoCao");
					this.OnMaBaoCaoChanged();
				}
			}
		}
		
		[Association(Name="BaoCaoHoatDong_BaoCaoCongTrinh", Storage="_BaoCaoHoatDong", ThisKey="MaBaoCao", OtherKey="MaBaoCao", IsForeignKey=true)]
		public BaoCaoHoatDong BaoCaoHoatDong
		{
			get
			{
				return this._BaoCaoHoatDong.Entity;
			}
			set
			{
				BaoCaoHoatDong previousValue = this._BaoCaoHoatDong.Entity;
				if (((previousValue != value) 
							|| (this._BaoCaoHoatDong.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BaoCaoHoatDong.Entity = null;
						previousValue.BaoCaoCongTrinhs.Remove(this);
					}
					this._BaoCaoHoatDong.Entity = value;
					if ((value != null))
					{
						value.BaoCaoCongTrinhs.Add(this);
						this._MaBaoCao = value.MaBaoCao;
					}
					else
					{
						this._MaBaoCao = default(Nullable<int>);
					}
					this.SendPropertyChanged("BaoCaoHoatDong");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.ThongTinChung")]
	public partial class ThongTinChung : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaThongTinChung;
		
		private System.Nullable<int> _MaLoaiHinhToChuc;
		
		private string _TenToChuc;
		
		private string _GiayPhepKinhDoanh;
		
		private string _NguoiDaiDien;
		
		private string _TruSoChinh;
		
		private string _SoTaiKhoan;
		
		private string _DienThoai;
		
		private string _Fax;
		
		private string _Email;
		
		private System.Nullable<int> _TongSoCanBo;
		
		private string _HangDoanhNghiep;
		
		private System.Nullable<decimal> _VonLuuDong;
		
		private System.Nullable<decimal> _VonPhapDinh;
		
		private EntitySet<BaoCaoHoatDong> _BaoCaoHoatDongs;
		
		private EntitySet<HoSoGiayPhep> _HoSoGiayPheps;
		
		private EntitySet<NangLucKeKhai> _NangLucKeKhais;
		
		private EntitySet<NhanLuc> _NhanLucs;
		
		private EntitySet<ThietBi> _ThietBis;
		
		private EntityRef<LoaiHinhToChuc> _LoaiHinhToChuc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaThongTinChungChanging(int value);
    partial void OnMaThongTinChungChanged();
    partial void OnMaLoaiHinhToChucChanging(System.Nullable<int> value);
    partial void OnMaLoaiHinhToChucChanged();
    partial void OnTenToChucChanging(string value);
    partial void OnTenToChucChanged();
    partial void OnGiayPhepKinhDoanhChanging(string value);
    partial void OnGiayPhepKinhDoanhChanged();
    partial void OnNguoiDaiDienChanging(string value);
    partial void OnNguoiDaiDienChanged();
    partial void OnTruSoChinhChanging(string value);
    partial void OnTruSoChinhChanged();
    partial void OnSoTaiKhoanChanging(string value);
    partial void OnSoTaiKhoanChanged();
    partial void OnDienThoaiChanging(string value);
    partial void OnDienThoaiChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnTongSoCanBoChanging(System.Nullable<int> value);
    partial void OnTongSoCanBoChanged();
    partial void OnHangDoanhNghiepChanging(string value);
    partial void OnHangDoanhNghiepChanged();
    partial void OnVonLuuDongChanging(System.Nullable<decimal> value);
    partial void OnVonLuuDongChanged();
    partial void OnVonPhapDinhChanging(System.Nullable<decimal> value);
    partial void OnVonPhapDinhChanged();
    #endregion
		
		public ThongTinChung()
		{
			this._BaoCaoHoatDongs = new EntitySet<BaoCaoHoatDong>(new Action<BaoCaoHoatDong>(this.attach_BaoCaoHoatDongs), new Action<BaoCaoHoatDong>(this.detach_BaoCaoHoatDongs));
			this._HoSoGiayPheps = new EntitySet<HoSoGiayPhep>(new Action<HoSoGiayPhep>(this.attach_HoSoGiayPheps), new Action<HoSoGiayPhep>(this.detach_HoSoGiayPheps));
			this._NangLucKeKhais = new EntitySet<NangLucKeKhai>(new Action<NangLucKeKhai>(this.attach_NangLucKeKhais), new Action<NangLucKeKhai>(this.detach_NangLucKeKhais));
			this._NhanLucs = new EntitySet<NhanLuc>(new Action<NhanLuc>(this.attach_NhanLucs), new Action<NhanLuc>(this.detach_NhanLucs));
			this._ThietBis = new EntitySet<ThietBi>(new Action<ThietBi>(this.attach_ThietBis), new Action<ThietBi>(this.detach_ThietBis));
			this._LoaiHinhToChuc = default(EntityRef<LoaiHinhToChuc>);
			OnCreated();
		}
		
		[Column(Storage="_MaThongTinChung", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaThongTinChung
		{
			get
			{
				return this._MaThongTinChung;
			}
			set
			{
				if ((this._MaThongTinChung != value))
				{
					this.OnMaThongTinChungChanging(value);
					this.SendPropertyChanging();
					this._MaThongTinChung = value;
					this.SendPropertyChanged("MaThongTinChung");
					this.OnMaThongTinChungChanged();
				}
			}
		}
		
		[Column(Storage="_MaLoaiHinhToChuc", DbType="Int")]
		public System.Nullable<int> MaLoaiHinhToChuc
		{
			get
			{
				return this._MaLoaiHinhToChuc;
			}
			set
			{
				if ((this._MaLoaiHinhToChuc != value))
				{
					if (this._LoaiHinhToChuc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLoaiHinhToChucChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiHinhToChuc = value;
					this.SendPropertyChanged("MaLoaiHinhToChuc");
					this.OnMaLoaiHinhToChucChanged();
				}
			}
		}
		
		[Column(Storage="_TenToChuc", DbType="NVarChar(250)")]
		public string TenToChuc
		{
			get
			{
				return this._TenToChuc;
			}
			set
			{
				if ((this._TenToChuc != value))
				{
					this.OnTenToChucChanging(value);
					this.SendPropertyChanging();
					this._TenToChuc = value;
					this.SendPropertyChanged("TenToChuc");
					this.OnTenToChucChanged();
				}
			}
		}
		
		[Column(Storage="_GiayPhepKinhDoanh", DbType="NVarChar(15)")]
		public string GiayPhepKinhDoanh
		{
			get
			{
				return this._GiayPhepKinhDoanh;
			}
			set
			{
				if ((this._GiayPhepKinhDoanh != value))
				{
					this.OnGiayPhepKinhDoanhChanging(value);
					this.SendPropertyChanging();
					this._GiayPhepKinhDoanh = value;
					this.SendPropertyChanged("GiayPhepKinhDoanh");
					this.OnGiayPhepKinhDoanhChanged();
				}
			}
		}
		
		[Column(Storage="_NguoiDaiDien", DbType="NVarChar(50)")]
		public string NguoiDaiDien
		{
			get
			{
				return this._NguoiDaiDien;
			}
			set
			{
				if ((this._NguoiDaiDien != value))
				{
					this.OnNguoiDaiDienChanging(value);
					this.SendPropertyChanging();
					this._NguoiDaiDien = value;
					this.SendPropertyChanged("NguoiDaiDien");
					this.OnNguoiDaiDienChanged();
				}
			}
		}
		
		[Column(Storage="_TruSoChinh", DbType="NVarChar(2000)")]
		public string TruSoChinh
		{
			get
			{
				return this._TruSoChinh;
			}
			set
			{
				if ((this._TruSoChinh != value))
				{
					this.OnTruSoChinhChanging(value);
					this.SendPropertyChanging();
					this._TruSoChinh = value;
					this.SendPropertyChanged("TruSoChinh");
					this.OnTruSoChinhChanged();
				}
			}
		}
		
		[Column(Storage="_SoTaiKhoan", DbType="NVarChar(50)")]
		public string SoTaiKhoan
		{
			get
			{
				return this._SoTaiKhoan;
			}
			set
			{
				if ((this._SoTaiKhoan != value))
				{
					this.OnSoTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._SoTaiKhoan = value;
					this.SendPropertyChanged("SoTaiKhoan");
					this.OnSoTaiKhoanChanged();
				}
			}
		}
		
		[Column(Storage="_DienThoai", DbType="NVarChar(15)")]
		public string DienThoai
		{
			get
			{
				return this._DienThoai;
			}
			set
			{
				if ((this._DienThoai != value))
				{
					this.OnDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._DienThoai = value;
					this.SendPropertyChanged("DienThoai");
					this.OnDienThoaiChanged();
				}
			}
		}
		
		[Column(Storage="_Fax", DbType="NVarChar(15)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[Column(Storage="_Email", DbType="NVarChar(250)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[Column(Storage="_TongSoCanBo", DbType="Int")]
		public System.Nullable<int> TongSoCanBo
		{
			get
			{
				return this._TongSoCanBo;
			}
			set
			{
				if ((this._TongSoCanBo != value))
				{
					this.OnTongSoCanBoChanging(value);
					this.SendPropertyChanging();
					this._TongSoCanBo = value;
					this.SendPropertyChanged("TongSoCanBo");
					this.OnTongSoCanBoChanged();
				}
			}
		}
		
		[Column(Storage="_HangDoanhNghiep", DbType="NVarChar(50)")]
		public string HangDoanhNghiep
		{
			get
			{
				return this._HangDoanhNghiep;
			}
			set
			{
				if ((this._HangDoanhNghiep != value))
				{
					this.OnHangDoanhNghiepChanging(value);
					this.SendPropertyChanging();
					this._HangDoanhNghiep = value;
					this.SendPropertyChanged("HangDoanhNghiep");
					this.OnHangDoanhNghiepChanged();
				}
			}
		}
		
		[Column(Storage="_VonLuuDong", DbType="Money")]
		public System.Nullable<decimal> VonLuuDong
		{
			get
			{
				return this._VonLuuDong;
			}
			set
			{
				if ((this._VonLuuDong != value))
				{
					this.OnVonLuuDongChanging(value);
					this.SendPropertyChanging();
					this._VonLuuDong = value;
					this.SendPropertyChanged("VonLuuDong");
					this.OnVonLuuDongChanged();
				}
			}
		}
		
		[Column(Storage="_VonPhapDinh", DbType="Money")]
		public System.Nullable<decimal> VonPhapDinh
		{
			get
			{
				return this._VonPhapDinh;
			}
			set
			{
				if ((this._VonPhapDinh != value))
				{
					this.OnVonPhapDinhChanging(value);
					this.SendPropertyChanging();
					this._VonPhapDinh = value;
					this.SendPropertyChanged("VonPhapDinh");
					this.OnVonPhapDinhChanged();
				}
			}
		}
		
		[Association(Name="ThongTinChung_BaoCaoHoatDong", Storage="_BaoCaoHoatDongs", ThisKey="MaThongTinChung", OtherKey="MaThongTinChung")]
		public EntitySet<BaoCaoHoatDong> BaoCaoHoatDongs
		{
			get
			{
				return this._BaoCaoHoatDongs;
			}
			set
			{
				this._BaoCaoHoatDongs.Assign(value);
			}
		}
		
		[Association(Name="ThongTinChung_HoSoGiayPhep", Storage="_HoSoGiayPheps", ThisKey="MaThongTinChung", OtherKey="MaThongTinChung")]
		public EntitySet<HoSoGiayPhep> HoSoGiayPheps
		{
			get
			{
				return this._HoSoGiayPheps;
			}
			set
			{
				this._HoSoGiayPheps.Assign(value);
			}
		}
		
		[Association(Name="ThongTinChung_NangLucKeKhai", Storage="_NangLucKeKhais", ThisKey="MaThongTinChung", OtherKey="MaThongTinChung")]
		public EntitySet<NangLucKeKhai> NangLucKeKhais
		{
			get
			{
				return this._NangLucKeKhais;
			}
			set
			{
				this._NangLucKeKhais.Assign(value);
			}
		}
		
		[Association(Name="ThongTinChung_NhanLuc", Storage="_NhanLucs", ThisKey="MaThongTinChung", OtherKey="MaThongTinChung")]
		public EntitySet<NhanLuc> NhanLucs
		{
			get
			{
				return this._NhanLucs;
			}
			set
			{
				this._NhanLucs.Assign(value);
			}
		}
		
		[Association(Name="ThongTinChung_ThietBi", Storage="_ThietBis", ThisKey="MaThongTinChung", OtherKey="MaThongTinChung")]
		public EntitySet<ThietBi> ThietBis
		{
			get
			{
				return this._ThietBis;
			}
			set
			{
				this._ThietBis.Assign(value);
			}
		}
		
		[Association(Name="LoaiHinhToChuc_ThongTinChung", Storage="_LoaiHinhToChuc", ThisKey="MaLoaiHinhToChuc", OtherKey="MaLoaiHinhToChuc", IsForeignKey=true)]
		public LoaiHinhToChuc LoaiHinhToChuc
		{
			get
			{
				return this._LoaiHinhToChuc.Entity;
			}
			set
			{
				LoaiHinhToChuc previousValue = this._LoaiHinhToChuc.Entity;
				if (((previousValue != value) 
							|| (this._LoaiHinhToChuc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiHinhToChuc.Entity = null;
						previousValue.ThongTinChungs.Remove(this);
					}
					this._LoaiHinhToChuc.Entity = value;
					if ((value != null))
					{
						value.ThongTinChungs.Add(this);
						this._MaLoaiHinhToChuc = value.MaLoaiHinhToChuc;
					}
					else
					{
						this._MaLoaiHinhToChuc = default(Nullable<int>);
					}
					this.SendPropertyChanged("LoaiHinhToChuc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BaoCaoHoatDongs(BaoCaoHoatDong entity)
		{
			this.SendPropertyChanging();
			entity.ThongTinChung = this;
		}
		
		private void detach_BaoCaoHoatDongs(BaoCaoHoatDong entity)
		{
			this.SendPropertyChanging();
			entity.ThongTinChung = null;
		}
		
		private void attach_HoSoGiayPheps(HoSoGiayPhep entity)
		{
			this.SendPropertyChanging();
			entity.ThongTinChung = this;
		}
		
		private void detach_HoSoGiayPheps(HoSoGiayPhep entity)
		{
			this.SendPropertyChanging();
			entity.ThongTinChung = null;
		}
		
		private void attach_NangLucKeKhais(NangLucKeKhai entity)
		{
			this.SendPropertyChanging();
			entity.ThongTinChung = this;
		}
		
		private void detach_NangLucKeKhais(NangLucKeKhai entity)
		{
			this.SendPropertyChanging();
			entity.ThongTinChung = null;
		}
		
		private void attach_NhanLucs(NhanLuc entity)
		{
			this.SendPropertyChanging();
			entity.ThongTinChung = this;
		}
		
		private void detach_NhanLucs(NhanLuc entity)
		{
			this.SendPropertyChanging();
			entity.ThongTinChung = null;
		}
		
		private void attach_ThietBis(ThietBi entity)
		{
			this.SendPropertyChanging();
			entity.ThongTinChung = this;
		}
		
		private void detach_ThietBis(ThietBi entity)
		{
			this.SendPropertyChanging();
			entity.ThongTinChung = null;
		}
	}
	
	[Table(Name="dbo.BaoCaoHoatDong")]
	public partial class BaoCaoHoatDong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaBaoCao;
		
		private System.Nullable<int> _MaToChuc;
		
		private System.Nullable<decimal> _DoanhThu;
		
		private System.Nullable<decimal> _NopNganSach;
		
		private System.Nullable<int> _TuNam;
		
		private System.Nullable<int> _DenNam;
		
		private System.Nullable<int> _MaThongTinChung;
		
		private EntitySet<BaoCaoCongTrinh> _BaoCaoCongTrinhs;
		
		private EntityRef<ThongTinChung> _ThongTinChung;
		
		private EntityRef<ToChuc> _ToChuc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaBaoCaoChanging(int value);
    partial void OnMaBaoCaoChanged();
    partial void OnMaToChucChanging(System.Nullable<int> value);
    partial void OnMaToChucChanged();
    partial void OnDoanhThuChanging(System.Nullable<decimal> value);
    partial void OnDoanhThuChanged();
    partial void OnNopNganSachChanging(System.Nullable<decimal> value);
    partial void OnNopNganSachChanged();
    partial void OnTuNamChanging(System.Nullable<int> value);
    partial void OnTuNamChanged();
    partial void OnDenNamChanging(System.Nullable<int> value);
    partial void OnDenNamChanged();
    partial void OnMaThongTinChungChanging(System.Nullable<int> value);
    partial void OnMaThongTinChungChanged();
    #endregion
		
		public BaoCaoHoatDong()
		{
			this._BaoCaoCongTrinhs = new EntitySet<BaoCaoCongTrinh>(new Action<BaoCaoCongTrinh>(this.attach_BaoCaoCongTrinhs), new Action<BaoCaoCongTrinh>(this.detach_BaoCaoCongTrinhs));
			this._ThongTinChung = default(EntityRef<ThongTinChung>);
			this._ToChuc = default(EntityRef<ToChuc>);
			OnCreated();
		}
		
		[Column(Storage="_MaBaoCao", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaBaoCao
		{
			get
			{
				return this._MaBaoCao;
			}
			set
			{
				if ((this._MaBaoCao != value))
				{
					this.OnMaBaoCaoChanging(value);
					this.SendPropertyChanging();
					this._MaBaoCao = value;
					this.SendPropertyChanged("MaBaoCao");
					this.OnMaBaoCaoChanged();
				}
			}
		}
		
		[Column(Storage="_MaToChuc", DbType="Int")]
		public System.Nullable<int> MaToChuc
		{
			get
			{
				return this._MaToChuc;
			}
			set
			{
				if ((this._MaToChuc != value))
				{
					if (this._ToChuc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaToChucChanging(value);
					this.SendPropertyChanging();
					this._MaToChuc = value;
					this.SendPropertyChanged("MaToChuc");
					this.OnMaToChucChanged();
				}
			}
		}
		
		[Column(Storage="_DoanhThu", DbType="Money")]
		public System.Nullable<decimal> DoanhThu
		{
			get
			{
				return this._DoanhThu;
			}
			set
			{
				if ((this._DoanhThu != value))
				{
					this.OnDoanhThuChanging(value);
					this.SendPropertyChanging();
					this._DoanhThu = value;
					this.SendPropertyChanged("DoanhThu");
					this.OnDoanhThuChanged();
				}
			}
		}
		
		[Column(Storage="_NopNganSach", DbType="Money")]
		public System.Nullable<decimal> NopNganSach
		{
			get
			{
				return this._NopNganSach;
			}
			set
			{
				if ((this._NopNganSach != value))
				{
					this.OnNopNganSachChanging(value);
					this.SendPropertyChanging();
					this._NopNganSach = value;
					this.SendPropertyChanged("NopNganSach");
					this.OnNopNganSachChanged();
				}
			}
		}
		
		[Column(Storage="_TuNam", DbType="Int")]
		public System.Nullable<int> TuNam
		{
			get
			{
				return this._TuNam;
			}
			set
			{
				if ((this._TuNam != value))
				{
					this.OnTuNamChanging(value);
					this.SendPropertyChanging();
					this._TuNam = value;
					this.SendPropertyChanged("TuNam");
					this.OnTuNamChanged();
				}
			}
		}
		
		[Column(Storage="_DenNam", DbType="Int")]
		public System.Nullable<int> DenNam
		{
			get
			{
				return this._DenNam;
			}
			set
			{
				if ((this._DenNam != value))
				{
					this.OnDenNamChanging(value);
					this.SendPropertyChanging();
					this._DenNam = value;
					this.SendPropertyChanged("DenNam");
					this.OnDenNamChanged();
				}
			}
		}
		
		[Column(Storage="_MaThongTinChung", DbType="Int")]
		public System.Nullable<int> MaThongTinChung
		{
			get
			{
				return this._MaThongTinChung;
			}
			set
			{
				if ((this._MaThongTinChung != value))
				{
					if (this._ThongTinChung.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaThongTinChungChanging(value);
					this.SendPropertyChanging();
					this._MaThongTinChung = value;
					this.SendPropertyChanged("MaThongTinChung");
					this.OnMaThongTinChungChanged();
				}
			}
		}
		
		[Association(Name="BaoCaoHoatDong_BaoCaoCongTrinh", Storage="_BaoCaoCongTrinhs", ThisKey="MaBaoCao", OtherKey="MaBaoCao")]
		public EntitySet<BaoCaoCongTrinh> BaoCaoCongTrinhs
		{
			get
			{
				return this._BaoCaoCongTrinhs;
			}
			set
			{
				this._BaoCaoCongTrinhs.Assign(value);
			}
		}
		
		[Association(Name="ThongTinChung_BaoCaoHoatDong", Storage="_ThongTinChung", ThisKey="MaThongTinChung", OtherKey="MaThongTinChung", IsForeignKey=true)]
		public ThongTinChung ThongTinChung
		{
			get
			{
				return this._ThongTinChung.Entity;
			}
			set
			{
				ThongTinChung previousValue = this._ThongTinChung.Entity;
				if (((previousValue != value) 
							|| (this._ThongTinChung.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ThongTinChung.Entity = null;
						previousValue.BaoCaoHoatDongs.Remove(this);
					}
					this._ThongTinChung.Entity = value;
					if ((value != null))
					{
						value.BaoCaoHoatDongs.Add(this);
						this._MaThongTinChung = value.MaThongTinChung;
					}
					else
					{
						this._MaThongTinChung = default(Nullable<int>);
					}
					this.SendPropertyChanged("ThongTinChung");
				}
			}
		}
		
		[Association(Name="ToChuc_BaoCaoHoatDong", Storage="_ToChuc", ThisKey="MaToChuc", OtherKey="MaToChuc", IsForeignKey=true, DeleteRule="CASCADE")]
		public ToChuc ToChuc
		{
			get
			{
				return this._ToChuc.Entity;
			}
			set
			{
				ToChuc previousValue = this._ToChuc.Entity;
				if (((previousValue != value) 
							|| (this._ToChuc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ToChuc.Entity = null;
						previousValue.BaoCaoHoatDongs.Remove(this);
					}
					this._ToChuc.Entity = value;
					if ((value != null))
					{
						value.BaoCaoHoatDongs.Add(this);
						this._MaToChuc = value.MaToChuc;
					}
					else
					{
						this._MaToChuc = default(Nullable<int>);
					}
					this.SendPropertyChanged("ToChuc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BaoCaoCongTrinhs(BaoCaoCongTrinh entity)
		{
			this.SendPropertyChanging();
			entity.BaoCaoHoatDong = this;
		}
		
		private void detach_BaoCaoCongTrinhs(BaoCaoCongTrinh entity)
		{
			this.SendPropertyChanging();
			entity.BaoCaoHoatDong = null;
		}
	}
	
	[Table(Name="dbo.CongDoanThucHien")]
	public partial class CongDoanThucHien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaCongDoan;
		
		private string _SoGiayPhep;
		
		private System.Nullable<int> _MaCongTrinh;
		
		private System.Nullable<System.DateTime> _NgayBatDau;
		
		private System.Nullable<System.DateTime> _NgayKetThuc;
		
		private EntityRef<CongTrinh> _CongTrinh;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaCongDoanChanging(int value);
    partial void OnMaCongDoanChanged();
    partial void OnSoGiayPhepChanging(string value);
    partial void OnSoGiayPhepChanged();
    partial void OnMaCongTrinhChanging(System.Nullable<int> value);
    partial void OnMaCongTrinhChanged();
    partial void OnNgayBatDauChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayBatDauChanged();
    partial void OnNgayKetThucChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayKetThucChanged();
    #endregion
		
		public CongDoanThucHien()
		{
			this._CongTrinh = default(EntityRef<CongTrinh>);
			OnCreated();
		}
		
		[Column(Storage="_MaCongDoan", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaCongDoan
		{
			get
			{
				return this._MaCongDoan;
			}
			set
			{
				if ((this._MaCongDoan != value))
				{
					this.OnMaCongDoanChanging(value);
					this.SendPropertyChanging();
					this._MaCongDoan = value;
					this.SendPropertyChanged("MaCongDoan");
					this.OnMaCongDoanChanged();
				}
			}
		}
		
		[Column(Storage="_SoGiayPhep", DbType="NVarChar(50)")]
		public string SoGiayPhep
		{
			get
			{
				return this._SoGiayPhep;
			}
			set
			{
				if ((this._SoGiayPhep != value))
				{
					this.OnSoGiayPhepChanging(value);
					this.SendPropertyChanging();
					this._SoGiayPhep = value;
					this.SendPropertyChanged("SoGiayPhep");
					this.OnSoGiayPhepChanged();
				}
			}
		}
		
		[Column(Storage="_MaCongTrinh", DbType="Int")]
		public System.Nullable<int> MaCongTrinh
		{
			get
			{
				return this._MaCongTrinh;
			}
			set
			{
				if ((this._MaCongTrinh != value))
				{
					if (this._CongTrinh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaCongTrinhChanging(value);
					this.SendPropertyChanging();
					this._MaCongTrinh = value;
					this.SendPropertyChanged("MaCongTrinh");
					this.OnMaCongTrinhChanged();
				}
			}
		}
		
		[Column(Storage="_NgayBatDau", DbType="Date")]
		public System.Nullable<System.DateTime> NgayBatDau
		{
			get
			{
				return this._NgayBatDau;
			}
			set
			{
				if ((this._NgayBatDau != value))
				{
					this.OnNgayBatDauChanging(value);
					this.SendPropertyChanging();
					this._NgayBatDau = value;
					this.SendPropertyChanged("NgayBatDau");
					this.OnNgayBatDauChanged();
				}
			}
		}
		
		[Column(Storage="_NgayKetThuc", DbType="Date")]
		public System.Nullable<System.DateTime> NgayKetThuc
		{
			get
			{
				return this._NgayKetThuc;
			}
			set
			{
				if ((this._NgayKetThuc != value))
				{
					this.OnNgayKetThucChanging(value);
					this.SendPropertyChanging();
					this._NgayKetThuc = value;
					this.SendPropertyChanged("NgayKetThuc");
					this.OnNgayKetThucChanged();
				}
			}
		}
		
		[Association(Name="CongTrinh_CongDoanThucHien", Storage="_CongTrinh", ThisKey="MaCongTrinh", OtherKey="MaCongTrinh", IsForeignKey=true, DeleteRule="CASCADE")]
		public CongTrinh CongTrinh
		{
			get
			{
				return this._CongTrinh.Entity;
			}
			set
			{
				CongTrinh previousValue = this._CongTrinh.Entity;
				if (((previousValue != value) 
							|| (this._CongTrinh.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CongTrinh.Entity = null;
						previousValue.CongDoanThucHiens.Remove(this);
					}
					this._CongTrinh.Entity = value;
					if ((value != null))
					{
						value.CongDoanThucHiens.Add(this);
						this._MaCongTrinh = value.MaCongTrinh;
					}
					else
					{
						this._MaCongTrinh = default(Nullable<int>);
					}
					this.SendPropertyChanged("CongTrinh");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.CongTrinh")]
	public partial class CongTrinh : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaCongTrinh;
		
		private string _TenCongTrinh;
		
		private string _ChuDauTu;
		
		private string _DonViNghiemThu;
		
		private System.Nullable<System.DateTime> _NgayBatDau;
		
		private System.Nullable<System.DateTime> _NgayKetThuc;
		
		private string _GhiChu;
		
		private System.Nullable<int> _TinhTrang;
		
		private EntitySet<CongDoanThucHien> _CongDoanThucHiens;
		
		private EntitySet<SanPham> _SanPhams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaCongTrinhChanging(int value);
    partial void OnMaCongTrinhChanged();
    partial void OnTenCongTrinhChanging(string value);
    partial void OnTenCongTrinhChanged();
    partial void OnChuDauTuChanging(string value);
    partial void OnChuDauTuChanged();
    partial void OnDonViNghiemThuChanging(string value);
    partial void OnDonViNghiemThuChanged();
    partial void OnNgayBatDauChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayBatDauChanged();
    partial void OnNgayKetThucChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayKetThucChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    partial void OnTinhTrangChanging(System.Nullable<int> value);
    partial void OnTinhTrangChanged();
    #endregion
		
		public CongTrinh()
		{
			this._CongDoanThucHiens = new EntitySet<CongDoanThucHien>(new Action<CongDoanThucHien>(this.attach_CongDoanThucHiens), new Action<CongDoanThucHien>(this.detach_CongDoanThucHiens));
			this._SanPhams = new EntitySet<SanPham>(new Action<SanPham>(this.attach_SanPhams), new Action<SanPham>(this.detach_SanPhams));
			OnCreated();
		}
		
		[Column(Storage="_MaCongTrinh", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaCongTrinh
		{
			get
			{
				return this._MaCongTrinh;
			}
			set
			{
				if ((this._MaCongTrinh != value))
				{
					this.OnMaCongTrinhChanging(value);
					this.SendPropertyChanging();
					this._MaCongTrinh = value;
					this.SendPropertyChanged("MaCongTrinh");
					this.OnMaCongTrinhChanged();
				}
			}
		}
		
		[Column(Storage="_TenCongTrinh", DbType="NVarChar(500)")]
		public string TenCongTrinh
		{
			get
			{
				return this._TenCongTrinh;
			}
			set
			{
				if ((this._TenCongTrinh != value))
				{
					this.OnTenCongTrinhChanging(value);
					this.SendPropertyChanging();
					this._TenCongTrinh = value;
					this.SendPropertyChanged("TenCongTrinh");
					this.OnTenCongTrinhChanged();
				}
			}
		}
		
		[Column(Storage="_ChuDauTu", DbType="NVarChar(500)")]
		public string ChuDauTu
		{
			get
			{
				return this._ChuDauTu;
			}
			set
			{
				if ((this._ChuDauTu != value))
				{
					this.OnChuDauTuChanging(value);
					this.SendPropertyChanging();
					this._ChuDauTu = value;
					this.SendPropertyChanged("ChuDauTu");
					this.OnChuDauTuChanged();
				}
			}
		}
		
		[Column(Storage="_DonViNghiemThu", DbType="NVarChar(500)")]
		public string DonViNghiemThu
		{
			get
			{
				return this._DonViNghiemThu;
			}
			set
			{
				if ((this._DonViNghiemThu != value))
				{
					this.OnDonViNghiemThuChanging(value);
					this.SendPropertyChanging();
					this._DonViNghiemThu = value;
					this.SendPropertyChanged("DonViNghiemThu");
					this.OnDonViNghiemThuChanged();
				}
			}
		}
		
		[Column(Storage="_NgayBatDau", DbType="Date")]
		public System.Nullable<System.DateTime> NgayBatDau
		{
			get
			{
				return this._NgayBatDau;
			}
			set
			{
				if ((this._NgayBatDau != value))
				{
					this.OnNgayBatDauChanging(value);
					this.SendPropertyChanging();
					this._NgayBatDau = value;
					this.SendPropertyChanged("NgayBatDau");
					this.OnNgayBatDauChanged();
				}
			}
		}
		
		[Column(Storage="_NgayKetThuc", DbType="Date")]
		public System.Nullable<System.DateTime> NgayKetThuc
		{
			get
			{
				return this._NgayKetThuc;
			}
			set
			{
				if ((this._NgayKetThuc != value))
				{
					this.OnNgayKetThucChanging(value);
					this.SendPropertyChanging();
					this._NgayKetThuc = value;
					this.SendPropertyChanged("NgayKetThuc");
					this.OnNgayKetThucChanged();
				}
			}
		}
		
		[Column(Storage="_GhiChu", DbType="NVarChar(2000)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[Column(Storage="_TinhTrang", DbType="Int")]
		public System.Nullable<int> TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[Association(Name="CongTrinh_CongDoanThucHien", Storage="_CongDoanThucHiens", ThisKey="MaCongTrinh", OtherKey="MaCongTrinh")]
		public EntitySet<CongDoanThucHien> CongDoanThucHiens
		{
			get
			{
				return this._CongDoanThucHiens;
			}
			set
			{
				this._CongDoanThucHiens.Assign(value);
			}
		}
		
		[Association(Name="CongTrinh_SanPham", Storage="_SanPhams", ThisKey="MaCongTrinh", OtherKey="MaCongTrinh")]
		public EntitySet<SanPham> SanPhams
		{
			get
			{
				return this._SanPhams;
			}
			set
			{
				this._SanPhams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CongDoanThucHiens(CongDoanThucHien entity)
		{
			this.SendPropertyChanging();
			entity.CongTrinh = this;
		}
		
		private void detach_CongDoanThucHiens(CongDoanThucHien entity)
		{
			this.SendPropertyChanging();
			entity.CongTrinh = null;
		}
		
		private void attach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.CongTrinh = this;
		}
		
		private void detach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.CongTrinh = null;
		}
	}
	
	[Table(Name="dbo.DangKyHoatDong")]
	public partial class DangKyHoatDong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDangKyHoatDong;
		
		private System.Nullable<int> _MaHoSo;
		
		private System.Nullable<System.DateTime> _NgayBoSung;
		
		private System.Nullable<int> _MaHoatDong;
		
		private System.Nullable<int> _LanBoSung;
		
		private EntityRef<HoatDong> _HoatDong;
		
		private EntityRef<HoSoGiayPhep> _HoSoGiayPhep;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDangKyHoatDongChanging(int value);
    partial void OnMaDangKyHoatDongChanged();
    partial void OnMaHoSoChanging(System.Nullable<int> value);
    partial void OnMaHoSoChanged();
    partial void OnNgayBoSungChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayBoSungChanged();
    partial void OnMaHoatDongChanging(System.Nullable<int> value);
    partial void OnMaHoatDongChanged();
    partial void OnLanBoSungChanging(System.Nullable<int> value);
    partial void OnLanBoSungChanged();
    #endregion
		
		public DangKyHoatDong()
		{
			this._HoatDong = default(EntityRef<HoatDong>);
			this._HoSoGiayPhep = default(EntityRef<HoSoGiayPhep>);
			OnCreated();
		}
		
		[Column(Storage="_MaDangKyHoatDong", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaDangKyHoatDong
		{
			get
			{
				return this._MaDangKyHoatDong;
			}
			set
			{
				if ((this._MaDangKyHoatDong != value))
				{
					this.OnMaDangKyHoatDongChanging(value);
					this.SendPropertyChanging();
					this._MaDangKyHoatDong = value;
					this.SendPropertyChanged("MaDangKyHoatDong");
					this.OnMaDangKyHoatDongChanged();
				}
			}
		}
		
		[Column(Storage="_MaHoSo", DbType="Int")]
		public System.Nullable<int> MaHoSo
		{
			get
			{
				return this._MaHoSo;
			}
			set
			{
				if ((this._MaHoSo != value))
				{
					if (this._HoSoGiayPhep.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHoSoChanging(value);
					this.SendPropertyChanging();
					this._MaHoSo = value;
					this.SendPropertyChanged("MaHoSo");
					this.OnMaHoSoChanged();
				}
			}
		}
		
		[Column(Storage="_NgayBoSung", DbType="Date")]
		public System.Nullable<System.DateTime> NgayBoSung
		{
			get
			{
				return this._NgayBoSung;
			}
			set
			{
				if ((this._NgayBoSung != value))
				{
					this.OnNgayBoSungChanging(value);
					this.SendPropertyChanging();
					this._NgayBoSung = value;
					this.SendPropertyChanged("NgayBoSung");
					this.OnNgayBoSungChanged();
				}
			}
		}
		
		[Column(Storage="_MaHoatDong", DbType="Int")]
		public System.Nullable<int> MaHoatDong
		{
			get
			{
				return this._MaHoatDong;
			}
			set
			{
				if ((this._MaHoatDong != value))
				{
					if (this._HoatDong.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHoatDongChanging(value);
					this.SendPropertyChanging();
					this._MaHoatDong = value;
					this.SendPropertyChanged("MaHoatDong");
					this.OnMaHoatDongChanged();
				}
			}
		}
		
		[Column(Storage="_LanBoSung", DbType="Int")]
		public System.Nullable<int> LanBoSung
		{
			get
			{
				return this._LanBoSung;
			}
			set
			{
				if ((this._LanBoSung != value))
				{
					this.OnLanBoSungChanging(value);
					this.SendPropertyChanging();
					this._LanBoSung = value;
					this.SendPropertyChanged("LanBoSung");
					this.OnLanBoSungChanged();
				}
			}
		}
		
		[Association(Name="HoatDong_DangKyHoatDong", Storage="_HoatDong", ThisKey="MaHoatDong", OtherKey="MaHoatDong", IsForeignKey=true)]
		public HoatDong HoatDong
		{
			get
			{
				return this._HoatDong.Entity;
			}
			set
			{
				HoatDong previousValue = this._HoatDong.Entity;
				if (((previousValue != value) 
							|| (this._HoatDong.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HoatDong.Entity = null;
						previousValue.DangKyHoatDongs.Remove(this);
					}
					this._HoatDong.Entity = value;
					if ((value != null))
					{
						value.DangKyHoatDongs.Add(this);
						this._MaHoatDong = value.MaHoatDong;
					}
					else
					{
						this._MaHoatDong = default(Nullable<int>);
					}
					this.SendPropertyChanged("HoatDong");
				}
			}
		}
		
		[Association(Name="HoSoGiayPhep_DangKyHoatDong", Storage="_HoSoGiayPhep", ThisKey="MaHoSo", OtherKey="MaHoSo", IsForeignKey=true)]
		public HoSoGiayPhep HoSoGiayPhep
		{
			get
			{
				return this._HoSoGiayPhep.Entity;
			}
			set
			{
				HoSoGiayPhep previousValue = this._HoSoGiayPhep.Entity;
				if (((previousValue != value) 
							|| (this._HoSoGiayPhep.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HoSoGiayPhep.Entity = null;
						previousValue.DangKyHoatDongs.Remove(this);
					}
					this._HoSoGiayPhep.Entity = value;
					if ((value != null))
					{
						value.DangKyHoatDongs.Add(this);
						this._MaHoSo = value.MaHoSo;
					}
					else
					{
						this._MaHoSo = default(Nullable<int>);
					}
					this.SendPropertyChanged("HoSoGiayPhep");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.HoatDong")]
	public partial class HoatDong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaHoatDong;
		
		private string _TenHoatDong;
		
		private EntitySet<DangKyHoatDong> _DangKyHoatDongs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHoatDongChanging(int value);
    partial void OnMaHoatDongChanged();
    partial void OnTenHoatDongChanging(string value);
    partial void OnTenHoatDongChanged();
    #endregion
		
		public HoatDong()
		{
			this._DangKyHoatDongs = new EntitySet<DangKyHoatDong>(new Action<DangKyHoatDong>(this.attach_DangKyHoatDongs), new Action<DangKyHoatDong>(this.detach_DangKyHoatDongs));
			OnCreated();
		}
		
		[Column(Storage="_MaHoatDong", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaHoatDong
		{
			get
			{
				return this._MaHoatDong;
			}
			set
			{
				if ((this._MaHoatDong != value))
				{
					this.OnMaHoatDongChanging(value);
					this.SendPropertyChanging();
					this._MaHoatDong = value;
					this.SendPropertyChanged("MaHoatDong");
					this.OnMaHoatDongChanged();
				}
			}
		}
		
		[Column(Storage="_TenHoatDong", DbType="NVarChar(500)")]
		public string TenHoatDong
		{
			get
			{
				return this._TenHoatDong;
			}
			set
			{
				if ((this._TenHoatDong != value))
				{
					this.OnTenHoatDongChanging(value);
					this.SendPropertyChanging();
					this._TenHoatDong = value;
					this.SendPropertyChanged("TenHoatDong");
					this.OnTenHoatDongChanged();
				}
			}
		}
		
		[Association(Name="HoatDong_DangKyHoatDong", Storage="_DangKyHoatDongs", ThisKey="MaHoatDong", OtherKey="MaHoatDong")]
		public EntitySet<DangKyHoatDong> DangKyHoatDongs
		{
			get
			{
				return this._DangKyHoatDongs;
			}
			set
			{
				this._DangKyHoatDongs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DangKyHoatDongs(DangKyHoatDong entity)
		{
			this.SendPropertyChanging();
			entity.HoatDong = this;
		}
		
		private void detach_DangKyHoatDongs(DangKyHoatDong entity)
		{
			this.SendPropertyChanging();
			entity.HoatDong = null;
		}
	}
	
	[Table(Name="dbo.HoatDongDuocCap")]
	public partial class HoatDongDuocCap
	{
		
		private int _MaHDHienTai;
		
		private System.Nullable<int> _MaToChuc;
		
		private string _SoGiayPhep;
		
		private System.Nullable<int> _LanBoSung;
		
		private string _TenHoatDong;
		
		public HoatDongDuocCap()
		{
		}
		
		[Column(Storage="_MaHDHienTai", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int MaHDHienTai
		{
			get
			{
				return this._MaHDHienTai;
			}
			set
			{
				if ((this._MaHDHienTai != value))
				{
					this._MaHDHienTai = value;
				}
			}
		}
		
		[Column(Storage="_MaToChuc", DbType="Int")]
		public System.Nullable<int> MaToChuc
		{
			get
			{
				return this._MaToChuc;
			}
			set
			{
				if ((this._MaToChuc != value))
				{
					this._MaToChuc = value;
				}
			}
		}
		
		[Column(Storage="_SoGiayPhep", DbType="VarChar(50)")]
		public string SoGiayPhep
		{
			get
			{
				return this._SoGiayPhep;
			}
			set
			{
				if ((this._SoGiayPhep != value))
				{
					this._SoGiayPhep = value;
				}
			}
		}
		
		[Column(Storage="_LanBoSung", DbType="Int")]
		public System.Nullable<int> LanBoSung
		{
			get
			{
				return this._LanBoSung;
			}
			set
			{
				if ((this._LanBoSung != value))
				{
					this._LanBoSung = value;
				}
			}
		}
		
		[Column(Storage="_TenHoatDong", DbType="NVarChar(500)")]
		public string TenHoatDong
		{
			get
			{
				return this._TenHoatDong;
			}
			set
			{
				if ((this._TenHoatDong != value))
				{
					this._TenHoatDong = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.HoSoGiayPhep")]
	public partial class HoSoGiayPhep : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaHoSo;
		
		private System.Nullable<int> _MaToChuc;
		
		private string _SoGiayPhep;
		
		private System.Nullable<System.DateTime> _NgayCapPhep;
		
		private System.Nullable<System.DateTime> _NgayHetHan;
		
		private string _LyDo;
		
		private string _CamKet;
		
		private System.Nullable<int> _TinhTrang;
		
		private System.Nullable<System.DateTime> _NgayXinPhep;
		
		private string _TepDinhKem;
		
		private System.Nullable<int> _MaThongTinChung;
		
		private System.Nullable<int> _LoaiGiayPhep;
		
		private EntitySet<DangKyHoatDong> _DangKyHoatDongs;
		
		private EntitySet<ThamDinh> _ThamDinhs;
		
		private EntityRef<ThongTinChung> _ThongTinChung;
		
		private EntityRef<TinhTrangGiayPhep> _TinhTrangGiayPhep;
		
		private EntityRef<ToChuc> _ToChuc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHoSoChanging(int value);
    partial void OnMaHoSoChanged();
    partial void OnMaToChucChanging(System.Nullable<int> value);
    partial void OnMaToChucChanged();
    partial void OnSoGiayPhepChanging(string value);
    partial void OnSoGiayPhepChanged();
    partial void OnNgayCapPhepChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayCapPhepChanged();
    partial void OnNgayHetHanChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayHetHanChanged();
    partial void OnLyDoChanging(string value);
    partial void OnLyDoChanged();
    partial void OnCamKetChanging(string value);
    partial void OnCamKetChanged();
    partial void OnTinhTrangChanging(System.Nullable<int> value);
    partial void OnTinhTrangChanged();
    partial void OnNgayXinPhepChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayXinPhepChanged();
    partial void OnTepDinhKemChanging(string value);
    partial void OnTepDinhKemChanged();
    partial void OnMaThongTinChungChanging(System.Nullable<int> value);
    partial void OnMaThongTinChungChanged();
    partial void OnLoaiGiayPhepChanging(System.Nullable<int> value);
    partial void OnLoaiGiayPhepChanged();
    #endregion
		
		public HoSoGiayPhep()
		{
			this._DangKyHoatDongs = new EntitySet<DangKyHoatDong>(new Action<DangKyHoatDong>(this.attach_DangKyHoatDongs), new Action<DangKyHoatDong>(this.detach_DangKyHoatDongs));
			this._ThamDinhs = new EntitySet<ThamDinh>(new Action<ThamDinh>(this.attach_ThamDinhs), new Action<ThamDinh>(this.detach_ThamDinhs));
			this._ThongTinChung = default(EntityRef<ThongTinChung>);
			this._TinhTrangGiayPhep = default(EntityRef<TinhTrangGiayPhep>);
			this._ToChuc = default(EntityRef<ToChuc>);
			OnCreated();
		}
		
		[Column(Storage="_MaHoSo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaHoSo
		{
			get
			{
				return this._MaHoSo;
			}
			set
			{
				if ((this._MaHoSo != value))
				{
					this.OnMaHoSoChanging(value);
					this.SendPropertyChanging();
					this._MaHoSo = value;
					this.SendPropertyChanged("MaHoSo");
					this.OnMaHoSoChanged();
				}
			}
		}
		
		[Column(Storage="_MaToChuc", DbType="Int")]
		public System.Nullable<int> MaToChuc
		{
			get
			{
				return this._MaToChuc;
			}
			set
			{
				if ((this._MaToChuc != value))
				{
					if (this._ToChuc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaToChucChanging(value);
					this.SendPropertyChanging();
					this._MaToChuc = value;
					this.SendPropertyChanged("MaToChuc");
					this.OnMaToChucChanged();
				}
			}
		}
		
		[Column(Storage="_SoGiayPhep", DbType="NVarChar(50)")]
		public string SoGiayPhep
		{
			get
			{
				return this._SoGiayPhep;
			}
			set
			{
				if ((this._SoGiayPhep != value))
				{
					this.OnSoGiayPhepChanging(value);
					this.SendPropertyChanging();
					this._SoGiayPhep = value;
					this.SendPropertyChanged("SoGiayPhep");
					this.OnSoGiayPhepChanged();
				}
			}
		}
		
		[Column(Storage="_NgayCapPhep", DbType="Date")]
		public System.Nullable<System.DateTime> NgayCapPhep
		{
			get
			{
				return this._NgayCapPhep;
			}
			set
			{
				if ((this._NgayCapPhep != value))
				{
					this.OnNgayCapPhepChanging(value);
					this.SendPropertyChanging();
					this._NgayCapPhep = value;
					this.SendPropertyChanged("NgayCapPhep");
					this.OnNgayCapPhepChanged();
				}
			}
		}
		
		[Column(Storage="_NgayHetHan", DbType="Date")]
		public System.Nullable<System.DateTime> NgayHetHan
		{
			get
			{
				return this._NgayHetHan;
			}
			set
			{
				if ((this._NgayHetHan != value))
				{
					this.OnNgayHetHanChanging(value);
					this.SendPropertyChanging();
					this._NgayHetHan = value;
					this.SendPropertyChanged("NgayHetHan");
					this.OnNgayHetHanChanged();
				}
			}
		}
		
		[Column(Storage="_LyDo", DbType="NVarChar(2000)")]
		public string LyDo
		{
			get
			{
				return this._LyDo;
			}
			set
			{
				if ((this._LyDo != value))
				{
					this.OnLyDoChanging(value);
					this.SendPropertyChanging();
					this._LyDo = value;
					this.SendPropertyChanged("LyDo");
					this.OnLyDoChanged();
				}
			}
		}
		
		[Column(Storage="_CamKet", DbType="NVarChar(2000)")]
		public string CamKet
		{
			get
			{
				return this._CamKet;
			}
			set
			{
				if ((this._CamKet != value))
				{
					this.OnCamKetChanging(value);
					this.SendPropertyChanging();
					this._CamKet = value;
					this.SendPropertyChanged("CamKet");
					this.OnCamKetChanged();
				}
			}
		}
		
		[Column(Storage="_TinhTrang", DbType="Int")]
		public System.Nullable<int> TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					if (this._TinhTrangGiayPhep.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[Column(Storage="_NgayXinPhep", DbType="Date")]
		public System.Nullable<System.DateTime> NgayXinPhep
		{
			get
			{
				return this._NgayXinPhep;
			}
			set
			{
				if ((this._NgayXinPhep != value))
				{
					this.OnNgayXinPhepChanging(value);
					this.SendPropertyChanging();
					this._NgayXinPhep = value;
					this.SendPropertyChanged("NgayXinPhep");
					this.OnNgayXinPhepChanged();
				}
			}
		}
		
		[Column(Storage="_TepDinhKem", DbType="NVarChar(50)")]
		public string TepDinhKem
		{
			get
			{
				return this._TepDinhKem;
			}
			set
			{
				if ((this._TepDinhKem != value))
				{
					this.OnTepDinhKemChanging(value);
					this.SendPropertyChanging();
					this._TepDinhKem = value;
					this.SendPropertyChanged("TepDinhKem");
					this.OnTepDinhKemChanged();
				}
			}
		}
		
		[Column(Storage="_MaThongTinChung", DbType="Int")]
		public System.Nullable<int> MaThongTinChung
		{
			get
			{
				return this._MaThongTinChung;
			}
			set
			{
				if ((this._MaThongTinChung != value))
				{
					if (this._ThongTinChung.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaThongTinChungChanging(value);
					this.SendPropertyChanging();
					this._MaThongTinChung = value;
					this.SendPropertyChanged("MaThongTinChung");
					this.OnMaThongTinChungChanged();
				}
			}
		}
		
		[Column(Storage="_LoaiGiayPhep", DbType="Int")]
		public System.Nullable<int> LoaiGiayPhep
		{
			get
			{
				return this._LoaiGiayPhep;
			}
			set
			{
				if ((this._LoaiGiayPhep != value))
				{
					this.OnLoaiGiayPhepChanging(value);
					this.SendPropertyChanging();
					this._LoaiGiayPhep = value;
					this.SendPropertyChanged("LoaiGiayPhep");
					this.OnLoaiGiayPhepChanged();
				}
			}
		}
		
		[Association(Name="HoSoGiayPhep_DangKyHoatDong", Storage="_DangKyHoatDongs", ThisKey="MaHoSo", OtherKey="MaHoSo")]
		public EntitySet<DangKyHoatDong> DangKyHoatDongs
		{
			get
			{
				return this._DangKyHoatDongs;
			}
			set
			{
				this._DangKyHoatDongs.Assign(value);
			}
		}
		
		[Association(Name="HoSoGiayPhep_ThamDinh", Storage="_ThamDinhs", ThisKey="MaHoSo", OtherKey="MaHoSo")]
		public EntitySet<ThamDinh> ThamDinhs
		{
			get
			{
				return this._ThamDinhs;
			}
			set
			{
				this._ThamDinhs.Assign(value);
			}
		}
		
		[Association(Name="ThongTinChung_HoSoGiayPhep", Storage="_ThongTinChung", ThisKey="MaThongTinChung", OtherKey="MaThongTinChung", IsForeignKey=true)]
		public ThongTinChung ThongTinChung
		{
			get
			{
				return this._ThongTinChung.Entity;
			}
			set
			{
				ThongTinChung previousValue = this._ThongTinChung.Entity;
				if (((previousValue != value) 
							|| (this._ThongTinChung.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ThongTinChung.Entity = null;
						previousValue.HoSoGiayPheps.Remove(this);
					}
					this._ThongTinChung.Entity = value;
					if ((value != null))
					{
						value.HoSoGiayPheps.Add(this);
						this._MaThongTinChung = value.MaThongTinChung;
					}
					else
					{
						this._MaThongTinChung = default(Nullable<int>);
					}
					this.SendPropertyChanged("ThongTinChung");
				}
			}
		}
		
		[Association(Name="TinhTrangGiayPhep_HoSoGiayPhep", Storage="_TinhTrangGiayPhep", ThisKey="TinhTrang", OtherKey="MaTinhTrang", IsForeignKey=true)]
		public TinhTrangGiayPhep TinhTrangGiayPhep
		{
			get
			{
				return this._TinhTrangGiayPhep.Entity;
			}
			set
			{
				TinhTrangGiayPhep previousValue = this._TinhTrangGiayPhep.Entity;
				if (((previousValue != value) 
							|| (this._TinhTrangGiayPhep.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TinhTrangGiayPhep.Entity = null;
						previousValue.HoSoGiayPheps.Remove(this);
					}
					this._TinhTrangGiayPhep.Entity = value;
					if ((value != null))
					{
						value.HoSoGiayPheps.Add(this);
						this._TinhTrang = value.MaTinhTrang;
					}
					else
					{
						this._TinhTrang = default(Nullable<int>);
					}
					this.SendPropertyChanged("TinhTrangGiayPhep");
				}
			}
		}
		
		[Association(Name="ToChuc_HoSoGiayPhep", Storage="_ToChuc", ThisKey="MaToChuc", OtherKey="MaToChuc", IsForeignKey=true, DeleteRule="CASCADE")]
		public ToChuc ToChuc
		{
			get
			{
				return this._ToChuc.Entity;
			}
			set
			{
				ToChuc previousValue = this._ToChuc.Entity;
				if (((previousValue != value) 
							|| (this._ToChuc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ToChuc.Entity = null;
						previousValue.HoSoGiayPheps.Remove(this);
					}
					this._ToChuc.Entity = value;
					if ((value != null))
					{
						value.HoSoGiayPheps.Add(this);
						this._MaToChuc = value.MaToChuc;
					}
					else
					{
						this._MaToChuc = default(Nullable<int>);
					}
					this.SendPropertyChanged("ToChuc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DangKyHoatDongs(DangKyHoatDong entity)
		{
			this.SendPropertyChanging();
			entity.HoSoGiayPhep = this;
		}
		
		private void detach_DangKyHoatDongs(DangKyHoatDong entity)
		{
			this.SendPropertyChanging();
			entity.HoSoGiayPhep = null;
		}
		
		private void attach_ThamDinhs(ThamDinh entity)
		{
			this.SendPropertyChanging();
			entity.HoSoGiayPhep = this;
		}
		
		private void detach_ThamDinhs(ThamDinh entity)
		{
			this.SendPropertyChanging();
			entity.HoSoGiayPhep = null;
		}
	}
	
	[Table(Name="dbo.LoaiHinhToChuc")]
	public partial class LoaiHinhToChuc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaLoaiHinhToChuc;
		
		private string _TenLoaiHinhToChuc;
		
		private EntitySet<ThongTinChung> _ThongTinChungs;
		
		private EntitySet<ToChuc> _ToChucs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoaiHinhToChucChanging(int value);
    partial void OnMaLoaiHinhToChucChanged();
    partial void OnTenLoaiHinhToChucChanging(string value);
    partial void OnTenLoaiHinhToChucChanged();
    #endregion
		
		public LoaiHinhToChuc()
		{
			this._ThongTinChungs = new EntitySet<ThongTinChung>(new Action<ThongTinChung>(this.attach_ThongTinChungs), new Action<ThongTinChung>(this.detach_ThongTinChungs));
			this._ToChucs = new EntitySet<ToChuc>(new Action<ToChuc>(this.attach_ToChucs), new Action<ToChuc>(this.detach_ToChucs));
			OnCreated();
		}
		
		[Column(Storage="_MaLoaiHinhToChuc", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaLoaiHinhToChuc
		{
			get
			{
				return this._MaLoaiHinhToChuc;
			}
			set
			{
				if ((this._MaLoaiHinhToChuc != value))
				{
					this.OnMaLoaiHinhToChucChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiHinhToChuc = value;
					this.SendPropertyChanged("MaLoaiHinhToChuc");
					this.OnMaLoaiHinhToChucChanged();
				}
			}
		}
		
		[Column(Storage="_TenLoaiHinhToChuc", DbType="NVarChar(50)")]
		public string TenLoaiHinhToChuc
		{
			get
			{
				return this._TenLoaiHinhToChuc;
			}
			set
			{
				if ((this._TenLoaiHinhToChuc != value))
				{
					this.OnTenLoaiHinhToChucChanging(value);
					this.SendPropertyChanging();
					this._TenLoaiHinhToChuc = value;
					this.SendPropertyChanged("TenLoaiHinhToChuc");
					this.OnTenLoaiHinhToChucChanged();
				}
			}
		}
		
		[Association(Name="LoaiHinhToChuc_ThongTinChung", Storage="_ThongTinChungs", ThisKey="MaLoaiHinhToChuc", OtherKey="MaLoaiHinhToChuc")]
		public EntitySet<ThongTinChung> ThongTinChungs
		{
			get
			{
				return this._ThongTinChungs;
			}
			set
			{
				this._ThongTinChungs.Assign(value);
			}
		}
		
		[Association(Name="LoaiHinhToChuc_ToChuc", Storage="_ToChucs", ThisKey="MaLoaiHinhToChuc", OtherKey="MaLoaiHinhToChuc")]
		public EntitySet<ToChuc> ToChucs
		{
			get
			{
				return this._ToChucs;
			}
			set
			{
				this._ToChucs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ThongTinChungs(ThongTinChung entity)
		{
			this.SendPropertyChanging();
			entity.LoaiHinhToChuc = this;
		}
		
		private void detach_ThongTinChungs(ThongTinChung entity)
		{
			this.SendPropertyChanging();
			entity.LoaiHinhToChuc = null;
		}
		
		private void attach_ToChucs(ToChuc entity)
		{
			this.SendPropertyChanging();
			entity.LoaiHinhToChuc = this;
		}
		
		private void detach_ToChucs(ToChuc entity)
		{
			this.SendPropertyChanging();
			entity.LoaiHinhToChuc = null;
		}
	}
	
	[Table(Name="dbo.LoaiQuyen")]
	public partial class LoaiQuyen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaLoaiQuyen;
		
		private string _TenLoaiQuyen;
		
		private string _DienGiai;
		
		private EntitySet<Quyen> _Quyens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoaiQuyenChanging(int value);
    partial void OnMaLoaiQuyenChanged();
    partial void OnTenLoaiQuyenChanging(string value);
    partial void OnTenLoaiQuyenChanged();
    partial void OnDienGiaiChanging(string value);
    partial void OnDienGiaiChanged();
    #endregion
		
		public LoaiQuyen()
		{
			this._Quyens = new EntitySet<Quyen>(new Action<Quyen>(this.attach_Quyens), new Action<Quyen>(this.detach_Quyens));
			OnCreated();
		}
		
		[Column(Storage="_MaLoaiQuyen", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaLoaiQuyen
		{
			get
			{
				return this._MaLoaiQuyen;
			}
			set
			{
				if ((this._MaLoaiQuyen != value))
				{
					this.OnMaLoaiQuyenChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiQuyen = value;
					this.SendPropertyChanged("MaLoaiQuyen");
					this.OnMaLoaiQuyenChanged();
				}
			}
		}
		
		[Column(Storage="_TenLoaiQuyen", DbType="NVarChar(50)")]
		public string TenLoaiQuyen
		{
			get
			{
				return this._TenLoaiQuyen;
			}
			set
			{
				if ((this._TenLoaiQuyen != value))
				{
					this.OnTenLoaiQuyenChanging(value);
					this.SendPropertyChanging();
					this._TenLoaiQuyen = value;
					this.SendPropertyChanged("TenLoaiQuyen");
					this.OnTenLoaiQuyenChanged();
				}
			}
		}
		
		[Column(Storage="_DienGiai", DbType="NVarChar(100)")]
		public string DienGiai
		{
			get
			{
				return this._DienGiai;
			}
			set
			{
				if ((this._DienGiai != value))
				{
					this.OnDienGiaiChanging(value);
					this.SendPropertyChanging();
					this._DienGiai = value;
					this.SendPropertyChanged("DienGiai");
					this.OnDienGiaiChanged();
				}
			}
		}
		
		[Association(Name="LoaiQuyen_Quyen", Storage="_Quyens", ThisKey="MaLoaiQuyen", OtherKey="LoaiQuyen")]
		public EntitySet<Quyen> Quyens
		{
			get
			{
				return this._Quyens;
			}
			set
			{
				this._Quyens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Quyens(Quyen entity)
		{
			this.SendPropertyChanging();
			entity.LoaiQuyen1 = this;
		}
		
		private void detach_Quyens(Quyen entity)
		{
			this.SendPropertyChanging();
			entity.LoaiQuyen1 = null;
		}
	}
	
	[Table(Name="dbo.LoaiSanPham")]
	public partial class LoaiSanPham : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaLoaiSanPham;
		
		private string _TenLoaiSanPham;
		
		private string _DienGiai;
		
		private EntitySet<SanPham> _SanPhams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoaiSanPhamChanging(int value);
    partial void OnMaLoaiSanPhamChanged();
    partial void OnTenLoaiSanPhamChanging(string value);
    partial void OnTenLoaiSanPhamChanged();
    partial void OnDienGiaiChanging(string value);
    partial void OnDienGiaiChanged();
    #endregion
		
		public LoaiSanPham()
		{
			this._SanPhams = new EntitySet<SanPham>(new Action<SanPham>(this.attach_SanPhams), new Action<SanPham>(this.detach_SanPhams));
			OnCreated();
		}
		
		[Column(Storage="_MaLoaiSanPham", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaLoaiSanPham
		{
			get
			{
				return this._MaLoaiSanPham;
			}
			set
			{
				if ((this._MaLoaiSanPham != value))
				{
					this.OnMaLoaiSanPhamChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiSanPham = value;
					this.SendPropertyChanged("MaLoaiSanPham");
					this.OnMaLoaiSanPhamChanged();
				}
			}
		}
		
		[Column(Storage="_TenLoaiSanPham", DbType="NVarChar(500)")]
		public string TenLoaiSanPham
		{
			get
			{
				return this._TenLoaiSanPham;
			}
			set
			{
				if ((this._TenLoaiSanPham != value))
				{
					this.OnTenLoaiSanPhamChanging(value);
					this.SendPropertyChanging();
					this._TenLoaiSanPham = value;
					this.SendPropertyChanged("TenLoaiSanPham");
					this.OnTenLoaiSanPhamChanged();
				}
			}
		}
		
		[Column(Storage="_DienGiai", DbType="NVarChar(2000)")]
		public string DienGiai
		{
			get
			{
				return this._DienGiai;
			}
			set
			{
				if ((this._DienGiai != value))
				{
					this.OnDienGiaiChanging(value);
					this.SendPropertyChanging();
					this._DienGiai = value;
					this.SendPropertyChanged("DienGiai");
					this.OnDienGiaiChanged();
				}
			}
		}
		
		[Association(Name="LoaiSanPham_SanPham", Storage="_SanPhams", ThisKey="MaLoaiSanPham", OtherKey="MaLoaiSanPham")]
		public EntitySet<SanPham> SanPhams
		{
			get
			{
				return this._SanPhams;
			}
			set
			{
				this._SanPhams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.LoaiSanPham = this;
		}
		
		private void detach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.LoaiSanPham = null;
		}
	}
	
	[Table(Name="dbo.NangLucKeKhai")]
	public partial class NangLucKeKhai : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaKeKhaiNangLuc;
		
		private string _NganhNghe;
		
		private System.Nullable<int> _SoTrenDaiHoc;
		
		private System.Nullable<int> _SoTrungCap;
		
		private System.Nullable<int> _SoCongNhanKyThuat;
		
		private System.Nullable<int> _LoaiKhac;
		
		private System.Nullable<int> _MaThongTinChung;
		
		private System.Nullable<int> _MaToChuc;
		
		private EntityRef<ThongTinChung> _ThongTinChung;
		
		private EntityRef<ToChuc> _ToChuc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKeKhaiNangLucChanging(int value);
    partial void OnMaKeKhaiNangLucChanged();
    partial void OnNganhNgheChanging(string value);
    partial void OnNganhNgheChanged();
    partial void OnSoTrenDaiHocChanging(System.Nullable<int> value);
    partial void OnSoTrenDaiHocChanged();
    partial void OnSoTrungCapChanging(System.Nullable<int> value);
    partial void OnSoTrungCapChanged();
    partial void OnSoCongNhanKyThuatChanging(System.Nullable<int> value);
    partial void OnSoCongNhanKyThuatChanged();
    partial void OnLoaiKhacChanging(System.Nullable<int> value);
    partial void OnLoaiKhacChanged();
    partial void OnMaThongTinChungChanging(System.Nullable<int> value);
    partial void OnMaThongTinChungChanged();
    partial void OnMaToChucChanging(System.Nullable<int> value);
    partial void OnMaToChucChanged();
    #endregion
		
		public NangLucKeKhai()
		{
			this._ThongTinChung = default(EntityRef<ThongTinChung>);
			this._ToChuc = default(EntityRef<ToChuc>);
			OnCreated();
		}
		
		[Column(Storage="_MaKeKhaiNangLuc", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaKeKhaiNangLuc
		{
			get
			{
				return this._MaKeKhaiNangLuc;
			}
			set
			{
				if ((this._MaKeKhaiNangLuc != value))
				{
					this.OnMaKeKhaiNangLucChanging(value);
					this.SendPropertyChanging();
					this._MaKeKhaiNangLuc = value;
					this.SendPropertyChanged("MaKeKhaiNangLuc");
					this.OnMaKeKhaiNangLucChanged();
				}
			}
		}
		
		[Column(Storage="_NganhNghe", DbType="NVarChar(250)")]
		public string NganhNghe
		{
			get
			{
				return this._NganhNghe;
			}
			set
			{
				if ((this._NganhNghe != value))
				{
					this.OnNganhNgheChanging(value);
					this.SendPropertyChanging();
					this._NganhNghe = value;
					this.SendPropertyChanged("NganhNghe");
					this.OnNganhNgheChanged();
				}
			}
		}
		
		[Column(Storage="_SoTrenDaiHoc", DbType="Int")]
		public System.Nullable<int> SoTrenDaiHoc
		{
			get
			{
				return this._SoTrenDaiHoc;
			}
			set
			{
				if ((this._SoTrenDaiHoc != value))
				{
					this.OnSoTrenDaiHocChanging(value);
					this.SendPropertyChanging();
					this._SoTrenDaiHoc = value;
					this.SendPropertyChanged("SoTrenDaiHoc");
					this.OnSoTrenDaiHocChanged();
				}
			}
		}
		
		[Column(Storage="_SoTrungCap", DbType="Int")]
		public System.Nullable<int> SoTrungCap
		{
			get
			{
				return this._SoTrungCap;
			}
			set
			{
				if ((this._SoTrungCap != value))
				{
					this.OnSoTrungCapChanging(value);
					this.SendPropertyChanging();
					this._SoTrungCap = value;
					this.SendPropertyChanged("SoTrungCap");
					this.OnSoTrungCapChanged();
				}
			}
		}
		
		[Column(Storage="_SoCongNhanKyThuat", DbType="Int")]
		public System.Nullable<int> SoCongNhanKyThuat
		{
			get
			{
				return this._SoCongNhanKyThuat;
			}
			set
			{
				if ((this._SoCongNhanKyThuat != value))
				{
					this.OnSoCongNhanKyThuatChanging(value);
					this.SendPropertyChanging();
					this._SoCongNhanKyThuat = value;
					this.SendPropertyChanged("SoCongNhanKyThuat");
					this.OnSoCongNhanKyThuatChanged();
				}
			}
		}
		
		[Column(Storage="_LoaiKhac", DbType="Int")]
		public System.Nullable<int> LoaiKhac
		{
			get
			{
				return this._LoaiKhac;
			}
			set
			{
				if ((this._LoaiKhac != value))
				{
					this.OnLoaiKhacChanging(value);
					this.SendPropertyChanging();
					this._LoaiKhac = value;
					this.SendPropertyChanged("LoaiKhac");
					this.OnLoaiKhacChanged();
				}
			}
		}
		
		[Column(Storage="_MaThongTinChung", DbType="Int")]
		public System.Nullable<int> MaThongTinChung
		{
			get
			{
				return this._MaThongTinChung;
			}
			set
			{
				if ((this._MaThongTinChung != value))
				{
					if (this._ThongTinChung.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaThongTinChungChanging(value);
					this.SendPropertyChanging();
					this._MaThongTinChung = value;
					this.SendPropertyChanged("MaThongTinChung");
					this.OnMaThongTinChungChanged();
				}
			}
		}
		
		[Column(Storage="_MaToChuc", DbType="Int")]
		public System.Nullable<int> MaToChuc
		{
			get
			{
				return this._MaToChuc;
			}
			set
			{
				if ((this._MaToChuc != value))
				{
					if (this._ToChuc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaToChucChanging(value);
					this.SendPropertyChanging();
					this._MaToChuc = value;
					this.SendPropertyChanged("MaToChuc");
					this.OnMaToChucChanged();
				}
			}
		}
		
		[Association(Name="ThongTinChung_NangLucKeKhai", Storage="_ThongTinChung", ThisKey="MaThongTinChung", OtherKey="MaThongTinChung", IsForeignKey=true)]
		public ThongTinChung ThongTinChung
		{
			get
			{
				return this._ThongTinChung.Entity;
			}
			set
			{
				ThongTinChung previousValue = this._ThongTinChung.Entity;
				if (((previousValue != value) 
							|| (this._ThongTinChung.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ThongTinChung.Entity = null;
						previousValue.NangLucKeKhais.Remove(this);
					}
					this._ThongTinChung.Entity = value;
					if ((value != null))
					{
						value.NangLucKeKhais.Add(this);
						this._MaThongTinChung = value.MaThongTinChung;
					}
					else
					{
						this._MaThongTinChung = default(Nullable<int>);
					}
					this.SendPropertyChanged("ThongTinChung");
				}
			}
		}
		
		[Association(Name="ToChuc_NangLucKeKhai", Storage="_ToChuc", ThisKey="MaToChuc", OtherKey="MaToChuc", IsForeignKey=true)]
		public ToChuc ToChuc
		{
			get
			{
				return this._ToChuc.Entity;
			}
			set
			{
				ToChuc previousValue = this._ToChuc.Entity;
				if (((previousValue != value) 
							|| (this._ToChuc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ToChuc.Entity = null;
						previousValue.NangLucKeKhais.Remove(this);
					}
					this._ToChuc.Entity = value;
					if ((value != null))
					{
						value.NangLucKeKhais.Add(this);
						this._MaToChuc = value.MaToChuc;
					}
					else
					{
						this._MaToChuc = default(Nullable<int>);
					}
					this.SendPropertyChanged("ToChuc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.NhanLuc")]
	public partial class NhanLuc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaNhanVien;
		
		private System.Nullable<int> _MaToChuc;
		
		private string _HoTen;
		
		private string _ChucVu;
		
		private string _TrinhDoHocVan;
		
		private System.Nullable<int> _MaThongTinChung;
		
		private string _ThamNien;
		
		private EntityRef<ThongTinChung> _ThongTinChung;
		
		private EntityRef<ToChuc> _ToChuc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNhanVienChanging(int value);
    partial void OnMaNhanVienChanged();
    partial void OnMaToChucChanging(System.Nullable<int> value);
    partial void OnMaToChucChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnChucVuChanging(string value);
    partial void OnChucVuChanged();
    partial void OnTrinhDoHocVanChanging(string value);
    partial void OnTrinhDoHocVanChanged();
    partial void OnMaThongTinChungChanging(System.Nullable<int> value);
    partial void OnMaThongTinChungChanged();
    partial void OnThamNienChanging(string value);
    partial void OnThamNienChanged();
    #endregion
		
		public NhanLuc()
		{
			this._ThongTinChung = default(EntityRef<ThongTinChung>);
			this._ToChuc = default(EntityRef<ToChuc>);
			OnCreated();
		}
		
		[Column(Storage="_MaNhanVien", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaNhanVien
		{
			get
			{
				return this._MaNhanVien;
			}
			set
			{
				if ((this._MaNhanVien != value))
				{
					this.OnMaNhanVienChanging(value);
					this.SendPropertyChanging();
					this._MaNhanVien = value;
					this.SendPropertyChanged("MaNhanVien");
					this.OnMaNhanVienChanged();
				}
			}
		}
		
		[Column(Storage="_MaToChuc", DbType="Int")]
		public System.Nullable<int> MaToChuc
		{
			get
			{
				return this._MaToChuc;
			}
			set
			{
				if ((this._MaToChuc != value))
				{
					if (this._ToChuc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaToChucChanging(value);
					this.SendPropertyChanging();
					this._MaToChuc = value;
					this.SendPropertyChanged("MaToChuc");
					this.OnMaToChucChanged();
				}
			}
		}
		
		[Column(Storage="_HoTen", DbType="NVarChar(50)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[Column(Storage="_ChucVu", DbType="NVarChar(50)")]
		public string ChucVu
		{
			get
			{
				return this._ChucVu;
			}
			set
			{
				if ((this._ChucVu != value))
				{
					this.OnChucVuChanging(value);
					this.SendPropertyChanging();
					this._ChucVu = value;
					this.SendPropertyChanged("ChucVu");
					this.OnChucVuChanged();
				}
			}
		}
		
		[Column(Storage="_TrinhDoHocVan", DbType="NVarChar(50)")]
		public string TrinhDoHocVan
		{
			get
			{
				return this._TrinhDoHocVan;
			}
			set
			{
				if ((this._TrinhDoHocVan != value))
				{
					this.OnTrinhDoHocVanChanging(value);
					this.SendPropertyChanging();
					this._TrinhDoHocVan = value;
					this.SendPropertyChanged("TrinhDoHocVan");
					this.OnTrinhDoHocVanChanged();
				}
			}
		}
		
		[Column(Storage="_MaThongTinChung", DbType="Int")]
		public System.Nullable<int> MaThongTinChung
		{
			get
			{
				return this._MaThongTinChung;
			}
			set
			{
				if ((this._MaThongTinChung != value))
				{
					if (this._ThongTinChung.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaThongTinChungChanging(value);
					this.SendPropertyChanging();
					this._MaThongTinChung = value;
					this.SendPropertyChanged("MaThongTinChung");
					this.OnMaThongTinChungChanged();
				}
			}
		}
		
		[Column(Storage="_ThamNien", DbType="NVarChar(20)")]
		public string ThamNien
		{
			get
			{
				return this._ThamNien;
			}
			set
			{
				if ((this._ThamNien != value))
				{
					this.OnThamNienChanging(value);
					this.SendPropertyChanging();
					this._ThamNien = value;
					this.SendPropertyChanged("ThamNien");
					this.OnThamNienChanged();
				}
			}
		}
		
		[Association(Name="ThongTinChung_NhanLuc", Storage="_ThongTinChung", ThisKey="MaThongTinChung", OtherKey="MaThongTinChung", IsForeignKey=true)]
		public ThongTinChung ThongTinChung
		{
			get
			{
				return this._ThongTinChung.Entity;
			}
			set
			{
				ThongTinChung previousValue = this._ThongTinChung.Entity;
				if (((previousValue != value) 
							|| (this._ThongTinChung.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ThongTinChung.Entity = null;
						previousValue.NhanLucs.Remove(this);
					}
					this._ThongTinChung.Entity = value;
					if ((value != null))
					{
						value.NhanLucs.Add(this);
						this._MaThongTinChung = value.MaThongTinChung;
					}
					else
					{
						this._MaThongTinChung = default(Nullable<int>);
					}
					this.SendPropertyChanged("ThongTinChung");
				}
			}
		}
		
		[Association(Name="ToChuc_NhanLuc", Storage="_ToChuc", ThisKey="MaToChuc", OtherKey="MaToChuc", IsForeignKey=true, DeleteRule="CASCADE")]
		public ToChuc ToChuc
		{
			get
			{
				return this._ToChuc.Entity;
			}
			set
			{
				ToChuc previousValue = this._ToChuc.Entity;
				if (((previousValue != value) 
							|| (this._ToChuc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ToChuc.Entity = null;
						previousValue.NhanLucs.Remove(this);
					}
					this._ToChuc.Entity = value;
					if ((value != null))
					{
						value.NhanLucs.Add(this);
						this._MaToChuc = value.MaToChuc;
					}
					else
					{
						this._MaToChuc = default(Nullable<int>);
					}
					this.SendPropertyChanged("ToChuc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.NhomNguoiDung")]
	public partial class NhomNguoiDung : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaNhom;
		
		private string _TenNhom;
		
		private EntitySet<QuyenCuaNhom> _QuyenCuaNhoms;
		
		private EntitySet<TaiKhoan> _TaiKhoans;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNhomChanging(int value);
    partial void OnMaNhomChanged();
    partial void OnTenNhomChanging(string value);
    partial void OnTenNhomChanged();
    #endregion
		
		public NhomNguoiDung()
		{
			this._QuyenCuaNhoms = new EntitySet<QuyenCuaNhom>(new Action<QuyenCuaNhom>(this.attach_QuyenCuaNhoms), new Action<QuyenCuaNhom>(this.detach_QuyenCuaNhoms));
			this._TaiKhoans = new EntitySet<TaiKhoan>(new Action<TaiKhoan>(this.attach_TaiKhoans), new Action<TaiKhoan>(this.detach_TaiKhoans));
			OnCreated();
		}
		
		[Column(Storage="_MaNhom", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaNhom
		{
			get
			{
				return this._MaNhom;
			}
			set
			{
				if ((this._MaNhom != value))
				{
					this.OnMaNhomChanging(value);
					this.SendPropertyChanging();
					this._MaNhom = value;
					this.SendPropertyChanged("MaNhom");
					this.OnMaNhomChanged();
				}
			}
		}
		
		[Column(Storage="_TenNhom", DbType="NVarChar(50)")]
		public string TenNhom
		{
			get
			{
				return this._TenNhom;
			}
			set
			{
				if ((this._TenNhom != value))
				{
					this.OnTenNhomChanging(value);
					this.SendPropertyChanging();
					this._TenNhom = value;
					this.SendPropertyChanged("TenNhom");
					this.OnTenNhomChanged();
				}
			}
		}
		
		[Association(Name="NhomNguoiDung_QuyenCuaNhom", Storage="_QuyenCuaNhoms", ThisKey="MaNhom", OtherKey="MaNhom")]
		public EntitySet<QuyenCuaNhom> QuyenCuaNhoms
		{
			get
			{
				return this._QuyenCuaNhoms;
			}
			set
			{
				this._QuyenCuaNhoms.Assign(value);
			}
		}
		
		[Association(Name="NhomNguoiDung_TaiKhoan", Storage="_TaiKhoans", ThisKey="MaNhom", OtherKey="NhomNguoiDung")]
		public EntitySet<TaiKhoan> TaiKhoans
		{
			get
			{
				return this._TaiKhoans;
			}
			set
			{
				this._TaiKhoans.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_QuyenCuaNhoms(QuyenCuaNhom entity)
		{
			this.SendPropertyChanging();
			entity.NhomNguoiDung = this;
		}
		
		private void detach_QuyenCuaNhoms(QuyenCuaNhom entity)
		{
			this.SendPropertyChanging();
			entity.NhomNguoiDung = null;
		}
		
		private void attach_TaiKhoans(TaiKhoan entity)
		{
			this.SendPropertyChanging();
			entity.NhomNguoiDung1 = this;
		}
		
		private void detach_TaiKhoans(TaiKhoan entity)
		{
			this.SendPropertyChanging();
			entity.NhomNguoiDung1 = null;
		}
	}
	
	[Table(Name="dbo.QuanHuyen")]
	public partial class QuanHuyen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaQuanHuyen;
		
		private string _TenQuanHuyen;
		
		private System.Nullable<int> _MaTinhThanh;
		
		private EntitySet<SanPham> _SanPhams;
		
		private EntityRef<TinhThanh> _TinhThanh;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaQuanHuyenChanging(int value);
    partial void OnMaQuanHuyenChanged();
    partial void OnTenQuanHuyenChanging(string value);
    partial void OnTenQuanHuyenChanged();
    partial void OnMaTinhThanhChanging(System.Nullable<int> value);
    partial void OnMaTinhThanhChanged();
    #endregion
		
		public QuanHuyen()
		{
			this._SanPhams = new EntitySet<SanPham>(new Action<SanPham>(this.attach_SanPhams), new Action<SanPham>(this.detach_SanPhams));
			this._TinhThanh = default(EntityRef<TinhThanh>);
			OnCreated();
		}
		
		[Column(Storage="_MaQuanHuyen", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaQuanHuyen
		{
			get
			{
				return this._MaQuanHuyen;
			}
			set
			{
				if ((this._MaQuanHuyen != value))
				{
					this.OnMaQuanHuyenChanging(value);
					this.SendPropertyChanging();
					this._MaQuanHuyen = value;
					this.SendPropertyChanged("MaQuanHuyen");
					this.OnMaQuanHuyenChanged();
				}
			}
		}
		
		[Column(Storage="_TenQuanHuyen", DbType="NVarChar(50)")]
		public string TenQuanHuyen
		{
			get
			{
				return this._TenQuanHuyen;
			}
			set
			{
				if ((this._TenQuanHuyen != value))
				{
					this.OnTenQuanHuyenChanging(value);
					this.SendPropertyChanging();
					this._TenQuanHuyen = value;
					this.SendPropertyChanged("TenQuanHuyen");
					this.OnTenQuanHuyenChanged();
				}
			}
		}
		
		[Column(Storage="_MaTinhThanh", DbType="Int")]
		public System.Nullable<int> MaTinhThanh
		{
			get
			{
				return this._MaTinhThanh;
			}
			set
			{
				if ((this._MaTinhThanh != value))
				{
					if (this._TinhThanh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTinhThanhChanging(value);
					this.SendPropertyChanging();
					this._MaTinhThanh = value;
					this.SendPropertyChanged("MaTinhThanh");
					this.OnMaTinhThanhChanged();
				}
			}
		}
		
		[Association(Name="QuanHuyen_SanPham", Storage="_SanPhams", ThisKey="MaQuanHuyen", OtherKey="MaQuanHuyen")]
		public EntitySet<SanPham> SanPhams
		{
			get
			{
				return this._SanPhams;
			}
			set
			{
				this._SanPhams.Assign(value);
			}
		}
		
		[Association(Name="TinhThanh_QuanHuyen", Storage="_TinhThanh", ThisKey="MaTinhThanh", OtherKey="MaTinhThanh", IsForeignKey=true, DeleteRule="CASCADE")]
		public TinhThanh TinhThanh
		{
			get
			{
				return this._TinhThanh.Entity;
			}
			set
			{
				TinhThanh previousValue = this._TinhThanh.Entity;
				if (((previousValue != value) 
							|| (this._TinhThanh.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TinhThanh.Entity = null;
						previousValue.QuanHuyens.Remove(this);
					}
					this._TinhThanh.Entity = value;
					if ((value != null))
					{
						value.QuanHuyens.Add(this);
						this._MaTinhThanh = value.MaTinhThanh;
					}
					else
					{
						this._MaTinhThanh = default(Nullable<int>);
					}
					this.SendPropertyChanged("TinhThanh");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.QuanHuyen = this;
		}
		
		private void detach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.QuanHuyen = null;
		}
	}
	
	[Table(Name="dbo.Quyen")]
	public partial class Quyen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaQuyen;
		
		private string _TenQuyen;
		
		private string _MoTa;
		
		private System.Nullable<int> _LoaiQuyen;
		
		private EntitySet<QuyenCuaNhom> _QuyenCuaNhoms;
		
		private EntityRef<LoaiQuyen> _LoaiQuyen1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaQuyenChanging(int value);
    partial void OnMaQuyenChanged();
    partial void OnTenQuyenChanging(string value);
    partial void OnTenQuyenChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    partial void OnLoaiQuyenChanging(System.Nullable<int> value);
    partial void OnLoaiQuyenChanged();
    #endregion
		
		public Quyen()
		{
			this._QuyenCuaNhoms = new EntitySet<QuyenCuaNhom>(new Action<QuyenCuaNhom>(this.attach_QuyenCuaNhoms), new Action<QuyenCuaNhom>(this.detach_QuyenCuaNhoms));
			this._LoaiQuyen1 = default(EntityRef<LoaiQuyen>);
			OnCreated();
		}
		
		[Column(Storage="_MaQuyen", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaQuyen
		{
			get
			{
				return this._MaQuyen;
			}
			set
			{
				if ((this._MaQuyen != value))
				{
					this.OnMaQuyenChanging(value);
					this.SendPropertyChanging();
					this._MaQuyen = value;
					this.SendPropertyChanged("MaQuyen");
					this.OnMaQuyenChanged();
				}
			}
		}
		
		[Column(Storage="_TenQuyen", DbType="NVarChar(50)")]
		public string TenQuyen
		{
			get
			{
				return this._TenQuyen;
			}
			set
			{
				if ((this._TenQuyen != value))
				{
					this.OnTenQuyenChanging(value);
					this.SendPropertyChanging();
					this._TenQuyen = value;
					this.SendPropertyChanged("TenQuyen");
					this.OnTenQuyenChanged();
				}
			}
		}
		
		[Column(Storage="_MoTa", DbType="NVarChar(100)")]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		[Column(Storage="_LoaiQuyen", DbType="Int")]
		public System.Nullable<int> LoaiQuyen
		{
			get
			{
				return this._LoaiQuyen;
			}
			set
			{
				if ((this._LoaiQuyen != value))
				{
					if (this._LoaiQuyen1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoaiQuyenChanging(value);
					this.SendPropertyChanging();
					this._LoaiQuyen = value;
					this.SendPropertyChanged("LoaiQuyen");
					this.OnLoaiQuyenChanged();
				}
			}
		}
		
		[Association(Name="Quyen_QuyenCuaNhom", Storage="_QuyenCuaNhoms", ThisKey="MaQuyen", OtherKey="Quyen")]
		public EntitySet<QuyenCuaNhom> QuyenCuaNhoms
		{
			get
			{
				return this._QuyenCuaNhoms;
			}
			set
			{
				this._QuyenCuaNhoms.Assign(value);
			}
		}
		
		[Association(Name="LoaiQuyen_Quyen", Storage="_LoaiQuyen1", ThisKey="LoaiQuyen", OtherKey="MaLoaiQuyen", IsForeignKey=true)]
		public LoaiQuyen LoaiQuyen1
		{
			get
			{
				return this._LoaiQuyen1.Entity;
			}
			set
			{
				LoaiQuyen previousValue = this._LoaiQuyen1.Entity;
				if (((previousValue != value) 
							|| (this._LoaiQuyen1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiQuyen1.Entity = null;
						previousValue.Quyens.Remove(this);
					}
					this._LoaiQuyen1.Entity = value;
					if ((value != null))
					{
						value.Quyens.Add(this);
						this._LoaiQuyen = value.MaLoaiQuyen;
					}
					else
					{
						this._LoaiQuyen = default(Nullable<int>);
					}
					this.SendPropertyChanged("LoaiQuyen1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_QuyenCuaNhoms(QuyenCuaNhom entity)
		{
			this.SendPropertyChanging();
			entity.Quyen1 = this;
		}
		
		private void detach_QuyenCuaNhoms(QuyenCuaNhom entity)
		{
			this.SendPropertyChanging();
			entity.Quyen1 = null;
		}
	}
	
	[Table(Name="dbo.QuyenCuaNhom")]
	public partial class QuyenCuaNhom : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaQuyenNhom;
		
		private int _MaNhom;
		
		private int _Quyen;
		
		private EntityRef<NhomNguoiDung> _NhomNguoiDung;
		
		private EntityRef<Quyen> _Quyen1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaQuyenNhomChanging(int value);
    partial void OnMaQuyenNhomChanged();
    partial void OnMaNhomChanging(int value);
    partial void OnMaNhomChanged();
    partial void OnQuyenChanging(int value);
    partial void OnQuyenChanged();
    #endregion
		
		public QuyenCuaNhom()
		{
			this._NhomNguoiDung = default(EntityRef<NhomNguoiDung>);
			this._Quyen1 = default(EntityRef<Quyen>);
			OnCreated();
		}
		
		[Column(Storage="_MaQuyenNhom", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaQuyenNhom
		{
			get
			{
				return this._MaQuyenNhom;
			}
			set
			{
				if ((this._MaQuyenNhom != value))
				{
					this.OnMaQuyenNhomChanging(value);
					this.SendPropertyChanging();
					this._MaQuyenNhom = value;
					this.SendPropertyChanged("MaQuyenNhom");
					this.OnMaQuyenNhomChanged();
				}
			}
		}
		
		[Column(Storage="_MaNhom", DbType="Int NOT NULL")]
		public int MaNhom
		{
			get
			{
				return this._MaNhom;
			}
			set
			{
				if ((this._MaNhom != value))
				{
					if (this._NhomNguoiDung.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNhomChanging(value);
					this.SendPropertyChanging();
					this._MaNhom = value;
					this.SendPropertyChanged("MaNhom");
					this.OnMaNhomChanged();
				}
			}
		}
		
		[Column(Storage="_Quyen", DbType="Int NOT NULL")]
		public int Quyen
		{
			get
			{
				return this._Quyen;
			}
			set
			{
				if ((this._Quyen != value))
				{
					if (this._Quyen1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuyenChanging(value);
					this.SendPropertyChanging();
					this._Quyen = value;
					this.SendPropertyChanged("Quyen");
					this.OnQuyenChanged();
				}
			}
		}
		
		[Association(Name="NhomNguoiDung_QuyenCuaNhom", Storage="_NhomNguoiDung", ThisKey="MaNhom", OtherKey="MaNhom", IsForeignKey=true)]
		public NhomNguoiDung NhomNguoiDung
		{
			get
			{
				return this._NhomNguoiDung.Entity;
			}
			set
			{
				NhomNguoiDung previousValue = this._NhomNguoiDung.Entity;
				if (((previousValue != value) 
							|| (this._NhomNguoiDung.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhomNguoiDung.Entity = null;
						previousValue.QuyenCuaNhoms.Remove(this);
					}
					this._NhomNguoiDung.Entity = value;
					if ((value != null))
					{
						value.QuyenCuaNhoms.Add(this);
						this._MaNhom = value.MaNhom;
					}
					else
					{
						this._MaNhom = default(int);
					}
					this.SendPropertyChanged("NhomNguoiDung");
				}
			}
		}
		
		[Association(Name="Quyen_QuyenCuaNhom", Storage="_Quyen1", ThisKey="Quyen", OtherKey="MaQuyen", IsForeignKey=true)]
		public Quyen Quyen1
		{
			get
			{
				return this._Quyen1.Entity;
			}
			set
			{
				Quyen previousValue = this._Quyen1.Entity;
				if (((previousValue != value) 
							|| (this._Quyen1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Quyen1.Entity = null;
						previousValue.QuyenCuaNhoms.Remove(this);
					}
					this._Quyen1.Entity = value;
					if ((value != null))
					{
						value.QuyenCuaNhoms.Add(this);
						this._Quyen = value.MaQuyen;
					}
					else
					{
						this._Quyen = default(int);
					}
					this.SendPropertyChanged("Quyen1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.SanPham")]
	public partial class SanPham : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaSanPham;
		
		private string _SoHieu;
		
		private System.Nullable<int> _MaLoaiSanPham;
		
		private System.Nullable<int> _MaCongTrinh;
		
		private System.Nullable<int> _MaQuanHuyen;
		
		private System.Nullable<int> _CapHanhChinh;
		
		private EntityRef<CongTrinh> _CongTrinh;
		
		private EntityRef<LoaiSanPham> _LoaiSanPham;
		
		private EntityRef<QuanHuyen> _QuanHuyen;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSanPhamChanging(int value);
    partial void OnMaSanPhamChanged();
    partial void OnSoHieuChanging(string value);
    partial void OnSoHieuChanged();
    partial void OnMaLoaiSanPhamChanging(System.Nullable<int> value);
    partial void OnMaLoaiSanPhamChanged();
    partial void OnMaCongTrinhChanging(System.Nullable<int> value);
    partial void OnMaCongTrinhChanged();
    partial void OnMaQuanHuyenChanging(System.Nullable<int> value);
    partial void OnMaQuanHuyenChanged();
    partial void OnCapHanhChinhChanging(System.Nullable<int> value);
    partial void OnCapHanhChinhChanged();
    #endregion
		
		public SanPham()
		{
			this._CongTrinh = default(EntityRef<CongTrinh>);
			this._LoaiSanPham = default(EntityRef<LoaiSanPham>);
			this._QuanHuyen = default(EntityRef<QuanHuyen>);
			OnCreated();
		}
		
		[Column(Storage="_MaSanPham", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaSanPham
		{
			get
			{
				return this._MaSanPham;
			}
			set
			{
				if ((this._MaSanPham != value))
				{
					this.OnMaSanPhamChanging(value);
					this.SendPropertyChanging();
					this._MaSanPham = value;
					this.SendPropertyChanged("MaSanPham");
					this.OnMaSanPhamChanged();
				}
			}
		}
		
		[Column(Storage="_SoHieu", DbType="NVarChar(50)")]
		public string SoHieu
		{
			get
			{
				return this._SoHieu;
			}
			set
			{
				if ((this._SoHieu != value))
				{
					this.OnSoHieuChanging(value);
					this.SendPropertyChanging();
					this._SoHieu = value;
					this.SendPropertyChanged("SoHieu");
					this.OnSoHieuChanged();
				}
			}
		}
		
		[Column(Storage="_MaLoaiSanPham", DbType="Int")]
		public System.Nullable<int> MaLoaiSanPham
		{
			get
			{
				return this._MaLoaiSanPham;
			}
			set
			{
				if ((this._MaLoaiSanPham != value))
				{
					if (this._LoaiSanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLoaiSanPhamChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiSanPham = value;
					this.SendPropertyChanged("MaLoaiSanPham");
					this.OnMaLoaiSanPhamChanged();
				}
			}
		}
		
		[Column(Storage="_MaCongTrinh", DbType="Int")]
		public System.Nullable<int> MaCongTrinh
		{
			get
			{
				return this._MaCongTrinh;
			}
			set
			{
				if ((this._MaCongTrinh != value))
				{
					if (this._CongTrinh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaCongTrinhChanging(value);
					this.SendPropertyChanging();
					this._MaCongTrinh = value;
					this.SendPropertyChanged("MaCongTrinh");
					this.OnMaCongTrinhChanged();
				}
			}
		}
		
		[Column(Storage="_MaQuanHuyen", DbType="Int")]
		public System.Nullable<int> MaQuanHuyen
		{
			get
			{
				return this._MaQuanHuyen;
			}
			set
			{
				if ((this._MaQuanHuyen != value))
				{
					if (this._QuanHuyen.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaQuanHuyenChanging(value);
					this.SendPropertyChanging();
					this._MaQuanHuyen = value;
					this.SendPropertyChanged("MaQuanHuyen");
					this.OnMaQuanHuyenChanged();
				}
			}
		}
		
		[Column(Storage="_CapHanhChinh", DbType="Int")]
		public System.Nullable<int> CapHanhChinh
		{
			get
			{
				return this._CapHanhChinh;
			}
			set
			{
				if ((this._CapHanhChinh != value))
				{
					this.OnCapHanhChinhChanging(value);
					this.SendPropertyChanging();
					this._CapHanhChinh = value;
					this.SendPropertyChanged("CapHanhChinh");
					this.OnCapHanhChinhChanged();
				}
			}
		}
		
		[Association(Name="CongTrinh_SanPham", Storage="_CongTrinh", ThisKey="MaCongTrinh", OtherKey="MaCongTrinh", IsForeignKey=true, DeleteRule="CASCADE")]
		public CongTrinh CongTrinh
		{
			get
			{
				return this._CongTrinh.Entity;
			}
			set
			{
				CongTrinh previousValue = this._CongTrinh.Entity;
				if (((previousValue != value) 
							|| (this._CongTrinh.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CongTrinh.Entity = null;
						previousValue.SanPhams.Remove(this);
					}
					this._CongTrinh.Entity = value;
					if ((value != null))
					{
						value.SanPhams.Add(this);
						this._MaCongTrinh = value.MaCongTrinh;
					}
					else
					{
						this._MaCongTrinh = default(Nullable<int>);
					}
					this.SendPropertyChanged("CongTrinh");
				}
			}
		}
		
		[Association(Name="LoaiSanPham_SanPham", Storage="_LoaiSanPham", ThisKey="MaLoaiSanPham", OtherKey="MaLoaiSanPham", IsForeignKey=true, DeleteRule="CASCADE")]
		public LoaiSanPham LoaiSanPham
		{
			get
			{
				return this._LoaiSanPham.Entity;
			}
			set
			{
				LoaiSanPham previousValue = this._LoaiSanPham.Entity;
				if (((previousValue != value) 
							|| (this._LoaiSanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiSanPham.Entity = null;
						previousValue.SanPhams.Remove(this);
					}
					this._LoaiSanPham.Entity = value;
					if ((value != null))
					{
						value.SanPhams.Add(this);
						this._MaLoaiSanPham = value.MaLoaiSanPham;
					}
					else
					{
						this._MaLoaiSanPham = default(Nullable<int>);
					}
					this.SendPropertyChanged("LoaiSanPham");
				}
			}
		}
		
		[Association(Name="QuanHuyen_SanPham", Storage="_QuanHuyen", ThisKey="MaQuanHuyen", OtherKey="MaQuanHuyen", IsForeignKey=true, DeleteRule="CASCADE")]
		public QuanHuyen QuanHuyen
		{
			get
			{
				return this._QuanHuyen.Entity;
			}
			set
			{
				QuanHuyen previousValue = this._QuanHuyen.Entity;
				if (((previousValue != value) 
							|| (this._QuanHuyen.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QuanHuyen.Entity = null;
						previousValue.SanPhams.Remove(this);
					}
					this._QuanHuyen.Entity = value;
					if ((value != null))
					{
						value.SanPhams.Add(this);
						this._MaQuanHuyen = value.MaQuanHuyen;
					}
					else
					{
						this._MaQuanHuyen = default(Nullable<int>);
					}
					this.SendPropertyChanged("QuanHuyen");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.TaiKhoan")]
	public partial class TaiKhoan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaTaiKhoan;
		
		private System.Nullable<int> _NhomNguoiDung;
		
		private string _TenTaiKhoan;
		
		private string _HoTen;
		
		private string _DiaChi;
		
		private string _CMND;
		
		private string _Email;
		
		private string _CoQuan;
		
		private System.Nullable<int> _TinhTrang;
		
		private string _MatKhau;
		
		private EntitySet<ToChuc> _ToChucs;
		
		private EntityRef<NhomNguoiDung> _NhomNguoiDung1;
		
		private EntityRef<TinhTrangTaiKhoan> _TinhTrangTaiKhoan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTaiKhoanChanging(int value);
    partial void OnMaTaiKhoanChanged();
    partial void OnNhomNguoiDungChanging(System.Nullable<int> value);
    partial void OnNhomNguoiDungChanged();
    partial void OnTenTaiKhoanChanging(string value);
    partial void OnTenTaiKhoanChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnCMNDChanging(string value);
    partial void OnCMNDChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnCoQuanChanging(string value);
    partial void OnCoQuanChanged();
    partial void OnTinhTrangChanging(System.Nullable<int> value);
    partial void OnTinhTrangChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    #endregion
		
		public TaiKhoan()
		{
			this._ToChucs = new EntitySet<ToChuc>(new Action<ToChuc>(this.attach_ToChucs), new Action<ToChuc>(this.detach_ToChucs));
			this._NhomNguoiDung1 = default(EntityRef<NhomNguoiDung>);
			this._TinhTrangTaiKhoan = default(EntityRef<TinhTrangTaiKhoan>);
			OnCreated();
		}
		
		[Column(Storage="_MaTaiKhoan", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaTaiKhoan
		{
			get
			{
				return this._MaTaiKhoan;
			}
			set
			{
				if ((this._MaTaiKhoan != value))
				{
					this.OnMaTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._MaTaiKhoan = value;
					this.SendPropertyChanged("MaTaiKhoan");
					this.OnMaTaiKhoanChanged();
				}
			}
		}
		
		[Column(Storage="_NhomNguoiDung", DbType="Int")]
		public System.Nullable<int> NhomNguoiDung
		{
			get
			{
				return this._NhomNguoiDung;
			}
			set
			{
				if ((this._NhomNguoiDung != value))
				{
					if (this._NhomNguoiDung1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNhomNguoiDungChanging(value);
					this.SendPropertyChanging();
					this._NhomNguoiDung = value;
					this.SendPropertyChanged("NhomNguoiDung");
					this.OnNhomNguoiDungChanged();
				}
			}
		}
		
		[Column(Storage="_TenTaiKhoan", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenTaiKhoan
		{
			get
			{
				return this._TenTaiKhoan;
			}
			set
			{
				if ((this._TenTaiKhoan != value))
				{
					this.OnTenTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._TenTaiKhoan = value;
					this.SendPropertyChanged("TenTaiKhoan");
					this.OnTenTaiKhoanChanged();
				}
			}
		}
		
		[Column(Storage="_HoTen", DbType="NVarChar(50)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[Column(Storage="_DiaChi", DbType="NVarChar(100)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[Column(Storage="_CMND", DbType="NVarChar(50)")]
		public string CMND
		{
			get
			{
				return this._CMND;
			}
			set
			{
				if ((this._CMND != value))
				{
					this.OnCMNDChanging(value);
					this.SendPropertyChanging();
					this._CMND = value;
					this.SendPropertyChanged("CMND");
					this.OnCMNDChanged();
				}
			}
		}
		
		[Column(Storage="_Email", DbType="NVarChar(250)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[Column(Storage="_CoQuan", DbType="NVarChar(100)")]
		public string CoQuan
		{
			get
			{
				return this._CoQuan;
			}
			set
			{
				if ((this._CoQuan != value))
				{
					this.OnCoQuanChanging(value);
					this.SendPropertyChanging();
					this._CoQuan = value;
					this.SendPropertyChanged("CoQuan");
					this.OnCoQuanChanged();
				}
			}
		}
		
		[Column(Storage="_TinhTrang", DbType="Int")]
		public System.Nullable<int> TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					if (this._TinhTrangTaiKhoan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[Column(Storage="_MatKhau", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[Association(Name="TaiKhoan_ToChuc", Storage="_ToChucs", ThisKey="MaTaiKhoan", OtherKey="MaTaiKhoan")]
		public EntitySet<ToChuc> ToChucs
		{
			get
			{
				return this._ToChucs;
			}
			set
			{
				this._ToChucs.Assign(value);
			}
		}
		
		[Association(Name="NhomNguoiDung_TaiKhoan", Storage="_NhomNguoiDung1", ThisKey="NhomNguoiDung", OtherKey="MaNhom", IsForeignKey=true)]
		public NhomNguoiDung NhomNguoiDung1
		{
			get
			{
				return this._NhomNguoiDung1.Entity;
			}
			set
			{
				NhomNguoiDung previousValue = this._NhomNguoiDung1.Entity;
				if (((previousValue != value) 
							|| (this._NhomNguoiDung1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhomNguoiDung1.Entity = null;
						previousValue.TaiKhoans.Remove(this);
					}
					this._NhomNguoiDung1.Entity = value;
					if ((value != null))
					{
						value.TaiKhoans.Add(this);
						this._NhomNguoiDung = value.MaNhom;
					}
					else
					{
						this._NhomNguoiDung = default(Nullable<int>);
					}
					this.SendPropertyChanged("NhomNguoiDung1");
				}
			}
		}
		
		[Association(Name="TinhTrangTaiKhoan_TaiKhoan", Storage="_TinhTrangTaiKhoan", ThisKey="TinhTrang", OtherKey="MaTinhTrang", IsForeignKey=true)]
		public TinhTrangTaiKhoan TinhTrangTaiKhoan
		{
			get
			{
				return this._TinhTrangTaiKhoan.Entity;
			}
			set
			{
				TinhTrangTaiKhoan previousValue = this._TinhTrangTaiKhoan.Entity;
				if (((previousValue != value) 
							|| (this._TinhTrangTaiKhoan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TinhTrangTaiKhoan.Entity = null;
						previousValue.TaiKhoans.Remove(this);
					}
					this._TinhTrangTaiKhoan.Entity = value;
					if ((value != null))
					{
						value.TaiKhoans.Add(this);
						this._TinhTrang = value.MaTinhTrang;
					}
					else
					{
						this._TinhTrang = default(Nullable<int>);
					}
					this.SendPropertyChanged("TinhTrangTaiKhoan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ToChucs(ToChuc entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = this;
		}
		
		private void detach_ToChucs(ToChuc entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = null;
		}
	}
	
	[Table(Name="dbo.TinhThanh")]
	public partial class TinhThanh : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaTinhThanh;
		
		private string _TenTinhThanh;
		
		private EntitySet<QuanHuyen> _QuanHuyens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTinhThanhChanging(int value);
    partial void OnMaTinhThanhChanged();
    partial void OnTenTinhThanhChanging(string value);
    partial void OnTenTinhThanhChanged();
    #endregion
		
		public TinhThanh()
		{
			this._QuanHuyens = new EntitySet<QuanHuyen>(new Action<QuanHuyen>(this.attach_QuanHuyens), new Action<QuanHuyen>(this.detach_QuanHuyens));
			OnCreated();
		}
		
		[Column(Storage="_MaTinhThanh", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaTinhThanh
		{
			get
			{
				return this._MaTinhThanh;
			}
			set
			{
				if ((this._MaTinhThanh != value))
				{
					this.OnMaTinhThanhChanging(value);
					this.SendPropertyChanging();
					this._MaTinhThanh = value;
					this.SendPropertyChanged("MaTinhThanh");
					this.OnMaTinhThanhChanged();
				}
			}
		}
		
		[Column(Storage="_TenTinhThanh", DbType="NVarChar(50)")]
		public string TenTinhThanh
		{
			get
			{
				return this._TenTinhThanh;
			}
			set
			{
				if ((this._TenTinhThanh != value))
				{
					this.OnTenTinhThanhChanging(value);
					this.SendPropertyChanging();
					this._TenTinhThanh = value;
					this.SendPropertyChanged("TenTinhThanh");
					this.OnTenTinhThanhChanged();
				}
			}
		}
		
		[Association(Name="TinhThanh_QuanHuyen", Storage="_QuanHuyens", ThisKey="MaTinhThanh", OtherKey="MaTinhThanh")]
		public EntitySet<QuanHuyen> QuanHuyens
		{
			get
			{
				return this._QuanHuyens;
			}
			set
			{
				this._QuanHuyens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_QuanHuyens(QuanHuyen entity)
		{
			this.SendPropertyChanging();
			entity.TinhThanh = this;
		}
		
		private void detach_QuanHuyens(QuanHuyen entity)
		{
			this.SendPropertyChanging();
			entity.TinhThanh = null;
		}
	}
	
	[Table(Name="dbo.TinhTrangGiayPhep")]
	public partial class TinhTrangGiayPhep : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaTinhTrang;
		
		private string _DienGiai;
		
		private EntitySet<HoSoGiayPhep> _HoSoGiayPheps;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTinhTrangChanging(int value);
    partial void OnMaTinhTrangChanged();
    partial void OnDienGiaiChanging(string value);
    partial void OnDienGiaiChanged();
    #endregion
		
		public TinhTrangGiayPhep()
		{
			this._HoSoGiayPheps = new EntitySet<HoSoGiayPhep>(new Action<HoSoGiayPhep>(this.attach_HoSoGiayPheps), new Action<HoSoGiayPhep>(this.detach_HoSoGiayPheps));
			OnCreated();
		}
		
		[Column(Storage="_MaTinhTrang", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaTinhTrang
		{
			get
			{
				return this._MaTinhTrang;
			}
			set
			{
				if ((this._MaTinhTrang != value))
				{
					this.OnMaTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._MaTinhTrang = value;
					this.SendPropertyChanged("MaTinhTrang");
					this.OnMaTinhTrangChanged();
				}
			}
		}
		
		[Column(Storage="_DienGiai", DbType="NVarChar(50)")]
		public string DienGiai
		{
			get
			{
				return this._DienGiai;
			}
			set
			{
				if ((this._DienGiai != value))
				{
					this.OnDienGiaiChanging(value);
					this.SendPropertyChanging();
					this._DienGiai = value;
					this.SendPropertyChanged("DienGiai");
					this.OnDienGiaiChanged();
				}
			}
		}
		
		[Association(Name="TinhTrangGiayPhep_HoSoGiayPhep", Storage="_HoSoGiayPheps", ThisKey="MaTinhTrang", OtherKey="TinhTrang")]
		public EntitySet<HoSoGiayPhep> HoSoGiayPheps
		{
			get
			{
				return this._HoSoGiayPheps;
			}
			set
			{
				this._HoSoGiayPheps.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HoSoGiayPheps(HoSoGiayPhep entity)
		{
			this.SendPropertyChanging();
			entity.TinhTrangGiayPhep = this;
		}
		
		private void detach_HoSoGiayPheps(HoSoGiayPhep entity)
		{
			this.SendPropertyChanging();
			entity.TinhTrangGiayPhep = null;
		}
	}
	
	[Table(Name="dbo.TinhTrangTaiKhoan")]
	public partial class TinhTrangTaiKhoan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaTinhTrang;
		
		private string _DienGiai;
		
		private EntitySet<TaiKhoan> _TaiKhoans;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTinhTrangChanging(int value);
    partial void OnMaTinhTrangChanged();
    partial void OnDienGiaiChanging(string value);
    partial void OnDienGiaiChanged();
    #endregion
		
		public TinhTrangTaiKhoan()
		{
			this._TaiKhoans = new EntitySet<TaiKhoan>(new Action<TaiKhoan>(this.attach_TaiKhoans), new Action<TaiKhoan>(this.detach_TaiKhoans));
			OnCreated();
		}
		
		[Column(Storage="_MaTinhTrang", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaTinhTrang
		{
			get
			{
				return this._MaTinhTrang;
			}
			set
			{
				if ((this._MaTinhTrang != value))
				{
					this.OnMaTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._MaTinhTrang = value;
					this.SendPropertyChanged("MaTinhTrang");
					this.OnMaTinhTrangChanged();
				}
			}
		}
		
		[Column(Storage="_DienGiai", DbType="NVarChar(50)")]
		public string DienGiai
		{
			get
			{
				return this._DienGiai;
			}
			set
			{
				if ((this._DienGiai != value))
				{
					this.OnDienGiaiChanging(value);
					this.SendPropertyChanging();
					this._DienGiai = value;
					this.SendPropertyChanged("DienGiai");
					this.OnDienGiaiChanged();
				}
			}
		}
		
		[Association(Name="TinhTrangTaiKhoan_TaiKhoan", Storage="_TaiKhoans", ThisKey="MaTinhTrang", OtherKey="TinhTrang")]
		public EntitySet<TaiKhoan> TaiKhoans
		{
			get
			{
				return this._TaiKhoans;
			}
			set
			{
				this._TaiKhoans.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TaiKhoans(TaiKhoan entity)
		{
			this.SendPropertyChanging();
			entity.TinhTrangTaiKhoan = this;
		}
		
		private void detach_TaiKhoans(TaiKhoan entity)
		{
			this.SendPropertyChanging();
			entity.TinhTrangTaiKhoan = null;
		}
	}
	
	[Table(Name="dbo.ToChuc")]
	public partial class ToChuc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaToChuc;
		
		private System.Nullable<int> _MaLoaiHinhToChuc;
		
		private string _TenToChuc;
		
		private string _GiayPhepKinhDoanh;
		
		private string _NguoiDaiDien;
		
		private string _TruSoChinh;
		
		private string _SoTaiKhoan;
		
		private string _DienThoai;
		
		private string _Fax;
		
		private string _Email;
		
		private System.Nullable<int> _TongSoCanBo;
		
		private string _TepDinhKem;
		
		private System.Nullable<int> _MaTaiKhoan;
		
		private string _HangDoanhNghiep;
		
		private System.Nullable<decimal> _VonLuuDong;
		
		private System.Nullable<decimal> _VonPhapDinh;
		
		private EntitySet<BaoCaoHoatDong> _BaoCaoHoatDongs;
		
		private EntitySet<HoSoGiayPhep> _HoSoGiayPheps;
		
		private EntitySet<NangLucKeKhai> _NangLucKeKhais;
		
		private EntitySet<NhanLuc> _NhanLucs;
		
		private EntitySet<ThietBi> _ThietBis;
		
		private EntityRef<LoaiHinhToChuc> _LoaiHinhToChuc;
		
		private EntityRef<TaiKhoan> _TaiKhoan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaToChucChanging(int value);
    partial void OnMaToChucChanged();
    partial void OnMaLoaiHinhToChucChanging(System.Nullable<int> value);
    partial void OnMaLoaiHinhToChucChanged();
    partial void OnTenToChucChanging(string value);
    partial void OnTenToChucChanged();
    partial void OnGiayPhepKinhDoanhChanging(string value);
    partial void OnGiayPhepKinhDoanhChanged();
    partial void OnNguoiDaiDienChanging(string value);
    partial void OnNguoiDaiDienChanged();
    partial void OnTruSoChinhChanging(string value);
    partial void OnTruSoChinhChanged();
    partial void OnSoTaiKhoanChanging(string value);
    partial void OnSoTaiKhoanChanged();
    partial void OnDienThoaiChanging(string value);
    partial void OnDienThoaiChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnTongSoCanBoChanging(System.Nullable<int> value);
    partial void OnTongSoCanBoChanged();
    partial void OnTepDinhKemChanging(string value);
    partial void OnTepDinhKemChanged();
    partial void OnMaTaiKhoanChanging(System.Nullable<int> value);
    partial void OnMaTaiKhoanChanged();
    partial void OnHangDoanhNghiepChanging(string value);
    partial void OnHangDoanhNghiepChanged();
    partial void OnVonLuuDongChanging(System.Nullable<decimal> value);
    partial void OnVonLuuDongChanged();
    partial void OnVonPhapDinhChanging(System.Nullable<decimal> value);
    partial void OnVonPhapDinhChanged();
    #endregion
		
		public ToChuc()
		{
			this._BaoCaoHoatDongs = new EntitySet<BaoCaoHoatDong>(new Action<BaoCaoHoatDong>(this.attach_BaoCaoHoatDongs), new Action<BaoCaoHoatDong>(this.detach_BaoCaoHoatDongs));
			this._HoSoGiayPheps = new EntitySet<HoSoGiayPhep>(new Action<HoSoGiayPhep>(this.attach_HoSoGiayPheps), new Action<HoSoGiayPhep>(this.detach_HoSoGiayPheps));
			this._NangLucKeKhais = new EntitySet<NangLucKeKhai>(new Action<NangLucKeKhai>(this.attach_NangLucKeKhais), new Action<NangLucKeKhai>(this.detach_NangLucKeKhais));
			this._NhanLucs = new EntitySet<NhanLuc>(new Action<NhanLuc>(this.attach_NhanLucs), new Action<NhanLuc>(this.detach_NhanLucs));
			this._ThietBis = new EntitySet<ThietBi>(new Action<ThietBi>(this.attach_ThietBis), new Action<ThietBi>(this.detach_ThietBis));
			this._LoaiHinhToChuc = default(EntityRef<LoaiHinhToChuc>);
			this._TaiKhoan = default(EntityRef<TaiKhoan>);
			OnCreated();
		}
		
		[Column(Storage="_MaToChuc", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaToChuc
		{
			get
			{
				return this._MaToChuc;
			}
			set
			{
				if ((this._MaToChuc != value))
				{
					this.OnMaToChucChanging(value);
					this.SendPropertyChanging();
					this._MaToChuc = value;
					this.SendPropertyChanged("MaToChuc");
					this.OnMaToChucChanged();
				}
			}
		}
		
		[Column(Storage="_MaLoaiHinhToChuc", DbType="Int")]
		public System.Nullable<int> MaLoaiHinhToChuc
		{
			get
			{
				return this._MaLoaiHinhToChuc;
			}
			set
			{
				if ((this._MaLoaiHinhToChuc != value))
				{
					if (this._LoaiHinhToChuc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLoaiHinhToChucChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiHinhToChuc = value;
					this.SendPropertyChanged("MaLoaiHinhToChuc");
					this.OnMaLoaiHinhToChucChanged();
				}
			}
		}
		
		[Column(Storage="_TenToChuc", DbType="NVarChar(250)")]
		public string TenToChuc
		{
			get
			{
				return this._TenToChuc;
			}
			set
			{
				if ((this._TenToChuc != value))
				{
					this.OnTenToChucChanging(value);
					this.SendPropertyChanging();
					this._TenToChuc = value;
					this.SendPropertyChanged("TenToChuc");
					this.OnTenToChucChanged();
				}
			}
		}
		
		[Column(Storage="_GiayPhepKinhDoanh", DbType="NVarChar(15)")]
		public string GiayPhepKinhDoanh
		{
			get
			{
				return this._GiayPhepKinhDoanh;
			}
			set
			{
				if ((this._GiayPhepKinhDoanh != value))
				{
					this.OnGiayPhepKinhDoanhChanging(value);
					this.SendPropertyChanging();
					this._GiayPhepKinhDoanh = value;
					this.SendPropertyChanged("GiayPhepKinhDoanh");
					this.OnGiayPhepKinhDoanhChanged();
				}
			}
		}
		
		[Column(Storage="_NguoiDaiDien", DbType="NVarChar(50)")]
		public string NguoiDaiDien
		{
			get
			{
				return this._NguoiDaiDien;
			}
			set
			{
				if ((this._NguoiDaiDien != value))
				{
					this.OnNguoiDaiDienChanging(value);
					this.SendPropertyChanging();
					this._NguoiDaiDien = value;
					this.SendPropertyChanged("NguoiDaiDien");
					this.OnNguoiDaiDienChanged();
				}
			}
		}
		
		[Column(Storage="_TruSoChinh", DbType="NVarChar(2000)")]
		public string TruSoChinh
		{
			get
			{
				return this._TruSoChinh;
			}
			set
			{
				if ((this._TruSoChinh != value))
				{
					this.OnTruSoChinhChanging(value);
					this.SendPropertyChanging();
					this._TruSoChinh = value;
					this.SendPropertyChanged("TruSoChinh");
					this.OnTruSoChinhChanged();
				}
			}
		}
		
		[Column(Storage="_SoTaiKhoan", DbType="NVarChar(50)")]
		public string SoTaiKhoan
		{
			get
			{
				return this._SoTaiKhoan;
			}
			set
			{
				if ((this._SoTaiKhoan != value))
				{
					this.OnSoTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._SoTaiKhoan = value;
					this.SendPropertyChanged("SoTaiKhoan");
					this.OnSoTaiKhoanChanged();
				}
			}
		}
		
		[Column(Storage="_DienThoai", DbType="NVarChar(15)")]
		public string DienThoai
		{
			get
			{
				return this._DienThoai;
			}
			set
			{
				if ((this._DienThoai != value))
				{
					this.OnDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._DienThoai = value;
					this.SendPropertyChanged("DienThoai");
					this.OnDienThoaiChanged();
				}
			}
		}
		
		[Column(Storage="_Fax", DbType="NVarChar(15)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[Column(Storage="_Email", DbType="NVarChar(250)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[Column(Storage="_TongSoCanBo", DbType="Int")]
		public System.Nullable<int> TongSoCanBo
		{
			get
			{
				return this._TongSoCanBo;
			}
			set
			{
				if ((this._TongSoCanBo != value))
				{
					this.OnTongSoCanBoChanging(value);
					this.SendPropertyChanging();
					this._TongSoCanBo = value;
					this.SendPropertyChanged("TongSoCanBo");
					this.OnTongSoCanBoChanged();
				}
			}
		}
		
		[Column(Storage="_TepDinhKem", DbType="NVarChar(500)")]
		public string TepDinhKem
		{
			get
			{
				return this._TepDinhKem;
			}
			set
			{
				if ((this._TepDinhKem != value))
				{
					this.OnTepDinhKemChanging(value);
					this.SendPropertyChanging();
					this._TepDinhKem = value;
					this.SendPropertyChanged("TepDinhKem");
					this.OnTepDinhKemChanged();
				}
			}
		}
		
		[Column(Storage="_MaTaiKhoan", DbType="Int")]
		public System.Nullable<int> MaTaiKhoan
		{
			get
			{
				return this._MaTaiKhoan;
			}
			set
			{
				if ((this._MaTaiKhoan != value))
				{
					if (this._TaiKhoan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._MaTaiKhoan = value;
					this.SendPropertyChanged("MaTaiKhoan");
					this.OnMaTaiKhoanChanged();
				}
			}
		}
		
		[Column(Storage="_HangDoanhNghiep", DbType="NVarChar(50)")]
		public string HangDoanhNghiep
		{
			get
			{
				return this._HangDoanhNghiep;
			}
			set
			{
				if ((this._HangDoanhNghiep != value))
				{
					this.OnHangDoanhNghiepChanging(value);
					this.SendPropertyChanging();
					this._HangDoanhNghiep = value;
					this.SendPropertyChanged("HangDoanhNghiep");
					this.OnHangDoanhNghiepChanged();
				}
			}
		}
		
		[Column(Storage="_VonLuuDong", DbType="Money")]
		public System.Nullable<decimal> VonLuuDong
		{
			get
			{
				return this._VonLuuDong;
			}
			set
			{
				if ((this._VonLuuDong != value))
				{
					this.OnVonLuuDongChanging(value);
					this.SendPropertyChanging();
					this._VonLuuDong = value;
					this.SendPropertyChanged("VonLuuDong");
					this.OnVonLuuDongChanged();
				}
			}
		}
		
		[Column(Storage="_VonPhapDinh", DbType="Money")]
		public System.Nullable<decimal> VonPhapDinh
		{
			get
			{
				return this._VonPhapDinh;
			}
			set
			{
				if ((this._VonPhapDinh != value))
				{
					this.OnVonPhapDinhChanging(value);
					this.SendPropertyChanging();
					this._VonPhapDinh = value;
					this.SendPropertyChanged("VonPhapDinh");
					this.OnVonPhapDinhChanged();
				}
			}
		}
		
		[Association(Name="ToChuc_BaoCaoHoatDong", Storage="_BaoCaoHoatDongs", ThisKey="MaToChuc", OtherKey="MaToChuc")]
		public EntitySet<BaoCaoHoatDong> BaoCaoHoatDongs
		{
			get
			{
				return this._BaoCaoHoatDongs;
			}
			set
			{
				this._BaoCaoHoatDongs.Assign(value);
			}
		}
		
		[Association(Name="ToChuc_HoSoGiayPhep", Storage="_HoSoGiayPheps", ThisKey="MaToChuc", OtherKey="MaToChuc")]
		public EntitySet<HoSoGiayPhep> HoSoGiayPheps
		{
			get
			{
				return this._HoSoGiayPheps;
			}
			set
			{
				this._HoSoGiayPheps.Assign(value);
			}
		}
		
		[Association(Name="ToChuc_NangLucKeKhai", Storage="_NangLucKeKhais", ThisKey="MaToChuc", OtherKey="MaToChuc")]
		public EntitySet<NangLucKeKhai> NangLucKeKhais
		{
			get
			{
				return this._NangLucKeKhais;
			}
			set
			{
				this._NangLucKeKhais.Assign(value);
			}
		}
		
		[Association(Name="ToChuc_NhanLuc", Storage="_NhanLucs", ThisKey="MaToChuc", OtherKey="MaToChuc")]
		public EntitySet<NhanLuc> NhanLucs
		{
			get
			{
				return this._NhanLucs;
			}
			set
			{
				this._NhanLucs.Assign(value);
			}
		}
		
		[Association(Name="ToChuc_ThietBi", Storage="_ThietBis", ThisKey="MaToChuc", OtherKey="MaToChuc")]
		public EntitySet<ThietBi> ThietBis
		{
			get
			{
				return this._ThietBis;
			}
			set
			{
				this._ThietBis.Assign(value);
			}
		}
		
		[Association(Name="LoaiHinhToChuc_ToChuc", Storage="_LoaiHinhToChuc", ThisKey="MaLoaiHinhToChuc", OtherKey="MaLoaiHinhToChuc", IsForeignKey=true, DeleteRule="CASCADE")]
		public LoaiHinhToChuc LoaiHinhToChuc
		{
			get
			{
				return this._LoaiHinhToChuc.Entity;
			}
			set
			{
				LoaiHinhToChuc previousValue = this._LoaiHinhToChuc.Entity;
				if (((previousValue != value) 
							|| (this._LoaiHinhToChuc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiHinhToChuc.Entity = null;
						previousValue.ToChucs.Remove(this);
					}
					this._LoaiHinhToChuc.Entity = value;
					if ((value != null))
					{
						value.ToChucs.Add(this);
						this._MaLoaiHinhToChuc = value.MaLoaiHinhToChuc;
					}
					else
					{
						this._MaLoaiHinhToChuc = default(Nullable<int>);
					}
					this.SendPropertyChanged("LoaiHinhToChuc");
				}
			}
		}
		
		[Association(Name="TaiKhoan_ToChuc", Storage="_TaiKhoan", ThisKey="MaTaiKhoan", OtherKey="MaTaiKhoan", IsForeignKey=true)]
		public TaiKhoan TaiKhoan
		{
			get
			{
				return this._TaiKhoan.Entity;
			}
			set
			{
				TaiKhoan previousValue = this._TaiKhoan.Entity;
				if (((previousValue != value) 
							|| (this._TaiKhoan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaiKhoan.Entity = null;
						previousValue.ToChucs.Remove(this);
					}
					this._TaiKhoan.Entity = value;
					if ((value != null))
					{
						value.ToChucs.Add(this);
						this._MaTaiKhoan = value.MaTaiKhoan;
					}
					else
					{
						this._MaTaiKhoan = default(Nullable<int>);
					}
					this.SendPropertyChanged("TaiKhoan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BaoCaoHoatDongs(BaoCaoHoatDong entity)
		{
			this.SendPropertyChanging();
			entity.ToChuc = this;
		}
		
		private void detach_BaoCaoHoatDongs(BaoCaoHoatDong entity)
		{
			this.SendPropertyChanging();
			entity.ToChuc = null;
		}
		
		private void attach_HoSoGiayPheps(HoSoGiayPhep entity)
		{
			this.SendPropertyChanging();
			entity.ToChuc = this;
		}
		
		private void detach_HoSoGiayPheps(HoSoGiayPhep entity)
		{
			this.SendPropertyChanging();
			entity.ToChuc = null;
		}
		
		private void attach_NangLucKeKhais(NangLucKeKhai entity)
		{
			this.SendPropertyChanging();
			entity.ToChuc = this;
		}
		
		private void detach_NangLucKeKhais(NangLucKeKhai entity)
		{
			this.SendPropertyChanging();
			entity.ToChuc = null;
		}
		
		private void attach_NhanLucs(NhanLuc entity)
		{
			this.SendPropertyChanging();
			entity.ToChuc = this;
		}
		
		private void detach_NhanLucs(NhanLuc entity)
		{
			this.SendPropertyChanging();
			entity.ToChuc = null;
		}
		
		private void attach_ThietBis(ThietBi entity)
		{
			this.SendPropertyChanging();
			entity.ToChuc = this;
		}
		
		private void detach_ThietBis(ThietBi entity)
		{
			this.SendPropertyChanging();
			entity.ToChuc = null;
		}
	}
	
	[Table(Name="dbo.ThamDinh")]
	public partial class ThamDinh : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaThamDinh;
		
		private System.Nullable<int> _MaHoSo;
		
		private string _NguoiThamDinh;
		
		private string _NguoiPhiaToChuc;
		
		private System.Nullable<System.DateTime> _NgayThamDinh;
		
		private string _TinhHopLe;
		
		private string _NangLucNhanVien;
		
		private string _NangLucThietBi;
		
		private string _KetLuan;
		
		private string _KienNghi;
		
		private System.Nullable<bool> _TinhTrangThamDinh;
		
		private EntityRef<HoSoGiayPhep> _HoSoGiayPhep;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaThamDinhChanging(int value);
    partial void OnMaThamDinhChanged();
    partial void OnMaHoSoChanging(System.Nullable<int> value);
    partial void OnMaHoSoChanged();
    partial void OnNguoiThamDinhChanging(string value);
    partial void OnNguoiThamDinhChanged();
    partial void OnNguoiPhiaToChucChanging(string value);
    partial void OnNguoiPhiaToChucChanged();
    partial void OnNgayThamDinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayThamDinhChanged();
    partial void OnTinhHopLeChanging(string value);
    partial void OnTinhHopLeChanged();
    partial void OnNangLucNhanVienChanging(string value);
    partial void OnNangLucNhanVienChanged();
    partial void OnNangLucThietBiChanging(string value);
    partial void OnNangLucThietBiChanged();
    partial void OnKetLuanChanging(string value);
    partial void OnKetLuanChanged();
    partial void OnKienNghiChanging(string value);
    partial void OnKienNghiChanged();
    partial void OnTinhTrangThamDinhChanging(System.Nullable<bool> value);
    partial void OnTinhTrangThamDinhChanged();
    #endregion
		
		public ThamDinh()
		{
			this._HoSoGiayPhep = default(EntityRef<HoSoGiayPhep>);
			OnCreated();
		}
		
		[Column(Storage="_MaThamDinh", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaThamDinh
		{
			get
			{
				return this._MaThamDinh;
			}
			set
			{
				if ((this._MaThamDinh != value))
				{
					this.OnMaThamDinhChanging(value);
					this.SendPropertyChanging();
					this._MaThamDinh = value;
					this.SendPropertyChanged("MaThamDinh");
					this.OnMaThamDinhChanged();
				}
			}
		}
		
		[Column(Storage="_MaHoSo", DbType="Int")]
		public System.Nullable<int> MaHoSo
		{
			get
			{
				return this._MaHoSo;
			}
			set
			{
				if ((this._MaHoSo != value))
				{
					if (this._HoSoGiayPhep.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHoSoChanging(value);
					this.SendPropertyChanging();
					this._MaHoSo = value;
					this.SendPropertyChanged("MaHoSo");
					this.OnMaHoSoChanged();
				}
			}
		}
		
		[Column(Storage="_NguoiThamDinh", DbType="NVarChar(500)")]
		public string NguoiThamDinh
		{
			get
			{
				return this._NguoiThamDinh;
			}
			set
			{
				if ((this._NguoiThamDinh != value))
				{
					this.OnNguoiThamDinhChanging(value);
					this.SendPropertyChanging();
					this._NguoiThamDinh = value;
					this.SendPropertyChanged("NguoiThamDinh");
					this.OnNguoiThamDinhChanged();
				}
			}
		}
		
		[Column(Storage="_NguoiPhiaToChuc", DbType="NVarChar(500)")]
		public string NguoiPhiaToChuc
		{
			get
			{
				return this._NguoiPhiaToChuc;
			}
			set
			{
				if ((this._NguoiPhiaToChuc != value))
				{
					this.OnNguoiPhiaToChucChanging(value);
					this.SendPropertyChanging();
					this._NguoiPhiaToChuc = value;
					this.SendPropertyChanged("NguoiPhiaToChuc");
					this.OnNguoiPhiaToChucChanged();
				}
			}
		}
		
		[Column(Storage="_NgayThamDinh", DbType="Date")]
		public System.Nullable<System.DateTime> NgayThamDinh
		{
			get
			{
				return this._NgayThamDinh;
			}
			set
			{
				if ((this._NgayThamDinh != value))
				{
					this.OnNgayThamDinhChanging(value);
					this.SendPropertyChanging();
					this._NgayThamDinh = value;
					this.SendPropertyChanged("NgayThamDinh");
					this.OnNgayThamDinhChanged();
				}
			}
		}
		
		[Column(Storage="_TinhHopLe", DbType="NVarChar(2000)")]
		public string TinhHopLe
		{
			get
			{
				return this._TinhHopLe;
			}
			set
			{
				if ((this._TinhHopLe != value))
				{
					this.OnTinhHopLeChanging(value);
					this.SendPropertyChanging();
					this._TinhHopLe = value;
					this.SendPropertyChanged("TinhHopLe");
					this.OnTinhHopLeChanged();
				}
			}
		}
		
		[Column(Storage="_NangLucNhanVien", DbType="NVarChar(2000)")]
		public string NangLucNhanVien
		{
			get
			{
				return this._NangLucNhanVien;
			}
			set
			{
				if ((this._NangLucNhanVien != value))
				{
					this.OnNangLucNhanVienChanging(value);
					this.SendPropertyChanging();
					this._NangLucNhanVien = value;
					this.SendPropertyChanged("NangLucNhanVien");
					this.OnNangLucNhanVienChanged();
				}
			}
		}
		
		[Column(Storage="_NangLucThietBi", DbType="NVarChar(2000)")]
		public string NangLucThietBi
		{
			get
			{
				return this._NangLucThietBi;
			}
			set
			{
				if ((this._NangLucThietBi != value))
				{
					this.OnNangLucThietBiChanging(value);
					this.SendPropertyChanging();
					this._NangLucThietBi = value;
					this.SendPropertyChanged("NangLucThietBi");
					this.OnNangLucThietBiChanged();
				}
			}
		}
		
		[Column(Storage="_KetLuan", DbType="NVarChar(2000)")]
		public string KetLuan
		{
			get
			{
				return this._KetLuan;
			}
			set
			{
				if ((this._KetLuan != value))
				{
					this.OnKetLuanChanging(value);
					this.SendPropertyChanging();
					this._KetLuan = value;
					this.SendPropertyChanged("KetLuan");
					this.OnKetLuanChanged();
				}
			}
		}
		
		[Column(Storage="_KienNghi", DbType="NVarChar(2000)")]
		public string KienNghi
		{
			get
			{
				return this._KienNghi;
			}
			set
			{
				if ((this._KienNghi != value))
				{
					this.OnKienNghiChanging(value);
					this.SendPropertyChanging();
					this._KienNghi = value;
					this.SendPropertyChanged("KienNghi");
					this.OnKienNghiChanged();
				}
			}
		}
		
		[Column(Storage="_TinhTrangThamDinh", DbType="Bit")]
		public System.Nullable<bool> TinhTrangThamDinh
		{
			get
			{
				return this._TinhTrangThamDinh;
			}
			set
			{
				if ((this._TinhTrangThamDinh != value))
				{
					this.OnTinhTrangThamDinhChanging(value);
					this.SendPropertyChanging();
					this._TinhTrangThamDinh = value;
					this.SendPropertyChanged("TinhTrangThamDinh");
					this.OnTinhTrangThamDinhChanged();
				}
			}
		}
		
		[Association(Name="HoSoGiayPhep_ThamDinh", Storage="_HoSoGiayPhep", ThisKey="MaHoSo", OtherKey="MaHoSo", IsForeignKey=true)]
		public HoSoGiayPhep HoSoGiayPhep
		{
			get
			{
				return this._HoSoGiayPhep.Entity;
			}
			set
			{
				HoSoGiayPhep previousValue = this._HoSoGiayPhep.Entity;
				if (((previousValue != value) 
							|| (this._HoSoGiayPhep.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HoSoGiayPhep.Entity = null;
						previousValue.ThamDinhs.Remove(this);
					}
					this._HoSoGiayPhep.Entity = value;
					if ((value != null))
					{
						value.ThamDinhs.Add(this);
						this._MaHoSo = value.MaHoSo;
					}
					else
					{
						this._MaHoSo = default(Nullable<int>);
					}
					this.SendPropertyChanged("HoSoGiayPhep");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.ThietBi")]
	public partial class ThietBi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaThietBi;
		
		private System.Nullable<int> _MaToChuc;
		
		private string _TenThietBi_CongNghe;
		
		private System.Nullable<int> _SoLuong;
		
		private string _GhiChu;
		
		private string _TinhTrang;
		
		private System.Nullable<int> _MaThongTinChung;
		
		private EntityRef<ToChuc> _ToChuc;
		
		private EntityRef<ThongTinChung> _ThongTinChung;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaThietBiChanging(int value);
    partial void OnMaThietBiChanged();
    partial void OnMaToChucChanging(System.Nullable<int> value);
    partial void OnMaToChucChanged();
    partial void OnTenThietBi_CongNgheChanging(string value);
    partial void OnTenThietBi_CongNgheChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    partial void OnTinhTrangChanging(string value);
    partial void OnTinhTrangChanged();
    partial void OnMaThongTinChungChanging(System.Nullable<int> value);
    partial void OnMaThongTinChungChanged();
    #endregion
		
		public ThietBi()
		{
			this._ToChuc = default(EntityRef<ToChuc>);
			this._ThongTinChung = default(EntityRef<ThongTinChung>);
			OnCreated();
		}
		
		[Column(Storage="_MaThietBi", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaThietBi
		{
			get
			{
				return this._MaThietBi;
			}
			set
			{
				if ((this._MaThietBi != value))
				{
					this.OnMaThietBiChanging(value);
					this.SendPropertyChanging();
					this._MaThietBi = value;
					this.SendPropertyChanged("MaThietBi");
					this.OnMaThietBiChanged();
				}
			}
		}
		
		[Column(Storage="_MaToChuc", DbType="Int")]
		public System.Nullable<int> MaToChuc
		{
			get
			{
				return this._MaToChuc;
			}
			set
			{
				if ((this._MaToChuc != value))
				{
					if (this._ToChuc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaToChucChanging(value);
					this.SendPropertyChanging();
					this._MaToChuc = value;
					this.SendPropertyChanged("MaToChuc");
					this.OnMaToChucChanged();
				}
			}
		}
		
		[Column(Storage="_TenThietBi_CongNghe", DbType="NVarChar(500)")]
		public string TenThietBi_CongNghe
		{
			get
			{
				return this._TenThietBi_CongNghe;
			}
			set
			{
				if ((this._TenThietBi_CongNghe != value))
				{
					this.OnTenThietBi_CongNgheChanging(value);
					this.SendPropertyChanging();
					this._TenThietBi_CongNghe = value;
					this.SendPropertyChanged("TenThietBi_CongNghe");
					this.OnTenThietBi_CongNgheChanged();
				}
			}
		}
		
		[Column(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[Column(Storage="_GhiChu", DbType="NVarChar(2000)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[Column(Storage="_TinhTrang", DbType="NVarChar(50)")]
		public string TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[Column(Storage="_MaThongTinChung", DbType="Int")]
		public System.Nullable<int> MaThongTinChung
		{
			get
			{
				return this._MaThongTinChung;
			}
			set
			{
				if ((this._MaThongTinChung != value))
				{
					if (this._ThongTinChung.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaThongTinChungChanging(value);
					this.SendPropertyChanging();
					this._MaThongTinChung = value;
					this.SendPropertyChanged("MaThongTinChung");
					this.OnMaThongTinChungChanged();
				}
			}
		}
		
		[Association(Name="ToChuc_ThietBi", Storage="_ToChuc", ThisKey="MaToChuc", OtherKey="MaToChuc", IsForeignKey=true, DeleteRule="CASCADE")]
		public ToChuc ToChuc
		{
			get
			{
				return this._ToChuc.Entity;
			}
			set
			{
				ToChuc previousValue = this._ToChuc.Entity;
				if (((previousValue != value) 
							|| (this._ToChuc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ToChuc.Entity = null;
						previousValue.ThietBis.Remove(this);
					}
					this._ToChuc.Entity = value;
					if ((value != null))
					{
						value.ThietBis.Add(this);
						this._MaToChuc = value.MaToChuc;
					}
					else
					{
						this._MaToChuc = default(Nullable<int>);
					}
					this.SendPropertyChanged("ToChuc");
				}
			}
		}
		
		[Association(Name="ThongTinChung_ThietBi", Storage="_ThongTinChung", ThisKey="MaThongTinChung", OtherKey="MaThongTinChung", IsForeignKey=true)]
		public ThongTinChung ThongTinChung
		{
			get
			{
				return this._ThongTinChung.Entity;
			}
			set
			{
				ThongTinChung previousValue = this._ThongTinChung.Entity;
				if (((previousValue != value) 
							|| (this._ThongTinChung.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ThongTinChung.Entity = null;
						previousValue.ThietBis.Remove(this);
					}
					this._ThongTinChung.Entity = value;
					if ((value != null))
					{
						value.ThietBis.Add(this);
						this._MaThongTinChung = value.MaThongTinChung;
					}
					else
					{
						this._MaThongTinChung = default(Nullable<int>);
					}
					this.SendPropertyChanged("ThongTinChung");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
